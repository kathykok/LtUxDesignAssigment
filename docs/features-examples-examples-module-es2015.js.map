{"version":3,"sources":["./src/app/features/examples/components/confirm-dialog-example/confirm-dialog-example.component.ts","./src/app/features/examples/components/confirm-dialog-example/confirm-dialog-example.component.html","./src/app/features/examples/components/error-handler-example/error-handler-example.component.ts","./src/app/features/examples/components/error-handler-example/error-handler-example.component.html","./src/app/features/examples/components/input-debounce/input-debounce.component.ts","./src/app/features/examples/components/input-debounce/input-debounce.component.html","./src/app/features/examples/components/loading-example/loading-example.component.ts","./src/app/features/examples/components/loading-example/loading-example.component.html","./src/app/features/examples/components/local-storage-example/local-storage-example.component.ts","./src/app/features/examples/components/local-storage-example/local-storage-example.component.html","./src/app/features/examples/components/notification-example/notification-example.component.ts","./src/app/features/examples/components/notification-example/notification-example.component.html","./src/app/features/examples/examples-routing.module.ts","./src/app/features/examples/examples.component.ts","./src/app/features/examples/examples.component.html","./src/app/features/examples/examples.module.ts","./src/app/shared/models/local-storage-key.model.ts","./src/app/shared/services/local-storage.service.ts"],"names":[],"mappings":"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","file":"features-examples-examples-module-es2015.js","sourcesContent":["/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component, OnInit } from '@angular/core'\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'\nimport { ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from '../../../../shared/models/dialog-data.model'\n\n@Component({\n  selector: 'app-confirm-dialog-example',\n  templateUrl: './confirm-dialog-example.component.html',\n  styleUrls: ['./confirm-dialog-example.component.scss'],\n})\nexport class ConfirmDialogExampleComponent implements OnInit {\n\n  private dialogRef: MatDialogRef<ConfirmDialogComponent, boolean>\n  public dialogResult: boolean\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  openConfirmDialog() {\n    this.dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '280px',\n      data: ({\n        title: 'Confirm Dialog',\n        message: 'Custom message here...',\n      } as DialogDataModel),\n    })\n\n    this.dialogRef.afterClosed().subscribe(result => this.dialogResult = result)\n  }\n\n  ngOnInit(): void {\n    // this.dialogRef.afterClosed().subscribe(result => this.dialogResult = result)\n  }\n}\n","<p><code>dialogResult: <strong>{{ dialogResult }}</strong></code></p>\n\n<button mat-stroked-button (click)=\"openConfirmDialog()\" [color]=\"'primary'\">\n  Open Dialog\n</button>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-error-handler-example',\n  templateUrl: './error-handler-example.component.html',\n  styleUrls: ['./error-handler-example.component.scss'],\n})\nexport class ErrorHandlerExampleComponent {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  runClientSiteErr404() {\n    this.http.get('http://localhost:4200/error').subscribe()\n  }\n\n  runServerSiteErr401() {\n    this.http.get('http://getstatuscode.com/401').subscribe()\n  }\n}\n","<button mat-stroked-button (click)=\"runClientSiteErr404()\" [color]=\"'warn'\" class=\"mr-3\">\n  Run ERROR: 404 Not Found\n</button>\n\n<button mat-stroked-button (click)=\"runServerSiteErr401()\" [color]=\"'warn'\">\n  Run ERROR: 401 Unauthorized\n</button>\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-input-debounce',\n  templateUrl: './input-debounce.component.html',\n  styleUrls: ['./input-debounce.component.scss'],\n})\nexport class InputDebounceComponent {\n\n  public val: string\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Text field</mat-label>\n    <input matInput appInput (delayedInput)=\"val=$event\">\n  </mat-form-field>\n</div>\n\ndelayed emit: <code><strong>{{ val }}</strong></code>\n","import { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { select, Store } from '@ngrx/store'\nimport { SharedState } from '../../../../shared/store/shared.state'\nimport { selectLoading } from '../../../../shared/store/shared.selectors'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-loading-example',\n  templateUrl: './loading-example.component.html',\n  styleUrls: ['./loading-example.component.scss'],\n})\nexport class LoadingExampleComponent {\n\n  public loading$: Observable<boolean>\n\n  constructor(private store: Store<SharedState>, private http: HttpClient) {\n    this.loading$ = store.pipe(select(selectLoading))\n  }\n\n  makeHttpRequest() {\n    this.http.get('http://getstatuscode.com/401').subscribe()\n  }\n}\n","<div class=\"loading-example__wrap\">\n  <span>Watch the icon:</span>\n  <div class=\"loading-example__icon-wrap\">\n    <mat-icon>hourglass_empty</mat-icon>\n    <mat-icon *ngIf=\"(loading$ | async)\" class=\"loading-example__icon-animated\" [color]=\"'primary'\">\n      hourglass_full\n    </mat-icon>\n  </div>\n  <span>after clicked the button.</span>\n</div>\n\n<button mat-stroked-button (click)=\"makeHttpRequest()\" [color]=\"'primary'\">\n  Make HTTP Request\n</button>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component, OnInit } from '@angular/core'\nimport { LocalStorageService } from '../../../../shared/services/local-storage.service'\nimport { LocalStorageKey } from '../../../../shared/models/local-storage-key.model'\n\n@Component({\n  selector: 'app-local-storage-example',\n  templateUrl: './local-storage-example.component.html',\n  styleUrls: ['./local-storage-example.component.scss'],\n})\nexport class LocalStorageExampleComponent implements OnInit {\n\n  public exampleValue: string\n\n  constructor(\n    private localStorageService: LocalStorageService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getExampleValue()\n  }\n\n  setExampleValue() {\n    this.localStorageService.set(LocalStorageKey.EXAMPLE_KEY, this.getRandomIntInclusive(1000, 9999))\n    this.getExampleValue()\n  }\n\n  getExampleValue() {\n    this.exampleValue = this.localStorageService.get(LocalStorageKey.EXAMPLE_KEY)\n  }\n\n  delExampleValue() {\n    this.localStorageService.del(LocalStorageKey.EXAMPLE_KEY)\n    this.getExampleValue()\n  }\n\n  private getRandomIntInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n}\n","<p><code>exampleValue: <strong>{{ exampleValue }}</strong></code></p>\n\n<p>\n  <button mat-stroked-button (click)=\"setExampleValue()\" [color]=\"'primary'\" class=\"mr-3\">\n    Set random exampleValue\n  </button>\n\n  <button mat-stroked-button (click)=\"delExampleValue()\" [color]=\"'warn'\">\n    Delete exampleValue\n  </button>\n</p>\n\nPress <code><strong>F5</strong></code> and back here to check it!\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component } from '@angular/core'\nimport { NotificationBarService } from '../../../../shared/services/notification-bar.service'\n\n@Component({\n  selector: 'app-notification-example',\n  templateUrl: './notification-example.component.html',\n  styleUrls: ['./notification-example.component.scss'],\n})\nexport class NotificationExampleComponent {\n\n  constructor(\n    private notificationService: NotificationBarService,\n  ) {\n  }\n\n  showSuccessNotification() {\n    this.notificationService.showSuccess('Example success notification.', 3500)\n  }\n\n  showErrorNotification() {\n    this.notificationService.showError('Example error notification.', 3500)\n  }\n\n  showInfoNotification() {\n    this.notificationService.showInfo('Example info notification.', 3500)\n  }\n}\n","<button mat-stroked-button (click)=\"showSuccessNotification()\" [color]=\"'primary'\" class=\"mr-3\">\n  Show success notification\n</button>\n\n<button mat-stroked-button (click)=\"showErrorNotification()\" [color]=\"'warn'\" class=\"mr-3\">\n  Show error notification\n</button>\n\n<button mat-stroked-button (click)=\"showInfoNotification()\"  class=\"mr-3\">\n  Show info notification\n</button>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { ExamplesComponent } from './examples.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamplesComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamplesRoutingModule {\n}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-examples',\n  templateUrl: './examples.component.html',\n  styleUrls: ['./examples.component.scss'],\n})\nexport class ExamplesComponent {\n}\n","<app-page-header>\n  <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n  <app-page-header-title>Features lists</app-page-header-title>\n</app-page-header>\n\n<div class=\"page-content\">\n  <mat-accordion>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Notifications</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For displaying snack-bar notifications.</p>\n      <app-notification-example></app-notification-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Confirm Dialog</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For displaying modal dialogs with confirm action.</p>\n      <app-confirm-dialog-example></app-confirm-dialog-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Local Storage</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <app-local-storage-example></app-local-storage-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Offline Indicator</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      Disable your internet connection or go to <strong>Network</strong> - chrome developer tab, and set it to <em>Offline</em>.\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>HTTP Error Handler</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For running errors.</p>\n      <app-error-handler-example></app-error-handler-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Loading</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <app-loading-example></app-loading-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Input Debounce</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          directive\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Write a text and see emitted value after 1 second delay.</p>\n      <app-input-debounce></app-input-debounce>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { SharedModule } from '../../shared/shared.module'\nimport { ExamplesRoutingModule } from './examples-routing.module'\nimport { ExamplesComponent } from './examples.component'\nimport { NotificationExampleComponent } from './components/notification-example/notification-example.component'\nimport { LocalStorageExampleComponent } from './components/local-storage-example/local-storage-example.component'\nimport { ErrorHandlerExampleComponent } from './components/error-handler-example/error-handler-example.component'\nimport { LoadingExampleComponent } from './components/loading-example/loading-example.component'\nimport { InputDebounceComponent } from './components/input-debounce/input-debounce.component'\nimport { ConfirmDialogExampleComponent } from './components/confirm-dialog-example/confirm-dialog-example.component'\n\n@NgModule({\n  declarations: [\n    ExamplesComponent,\n    NotificationExampleComponent,\n    LocalStorageExampleComponent,\n    ErrorHandlerExampleComponent,\n    LoadingExampleComponent,\n    InputDebounceComponent,\n    ConfirmDialogExampleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ExamplesRoutingModule,\n    SharedModule,\n  ],\n})\nexport class ExamplesModule {\n}\n","export enum LocalStorageKey {\n  EXAMPLE_KEY = 'EXAMPLE_KEY',\n}\n","import { Injectable } from '@angular/core'\nimport { LocalStorageKey } from '../models/local-storage-key.model'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n\n  // IMPORTANT: do not store sensitive data in local storage,\n  // to store data like JWT token use cookies instead!\n\n  public set(key: LocalStorageKey, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data))\n  }\n\n  public get(key: string): string {\n    return JSON.parse(localStorage.getItem(key))\n  }\n\n  public del(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n"],"sourceRoot":"webpack:///"}