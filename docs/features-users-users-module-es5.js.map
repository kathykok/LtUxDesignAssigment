{"version":3,"sources":["webpack:///src/app/features/users/components/users-list/users-list.component.ts","webpack:///src/app/features/users/components/users-list/users-list.component.html","webpack:///src/app/features/users/store/users.selectors.ts","webpack:///src/app/features/users/users-routing.module.ts","webpack:///src/app/features/users/users.component.ts","webpack:///src/app/features/users/users.component.html","webpack:///src/app/features/users/users.module.ts"],"names":["UsersListComponent","store","activatedRoute","router","dialog","displayedColumns","currentFilter","defaultSort","active","direction","defaultPageIndex","defaultPageSize","users$","pipe","loading$","totalCount$","subscribe","users","dataSourceForTable","queryParams","paramsFromUrl","sortField","sortDirection","currentSort","setCurrentSort","pageIndex","pageSize","currentPageIndex","currentPageSize","setCurrentPageIndexAndSize","filter","loadUsers","setDisplayedColumns","dialogRef","open","width","height","data","title","message","$event","onFilterChange","updateQueryParamToUrl","user","alert","dispatch","collectionParams","sort","params","navigate","relativeTo","queryParamsHandling","onClear","onRefresh","onNewBookingClicked","onMatSortChange","onPageChange","selector","templateUrl","styleUrls","paginator","getSelectors","selectAll","selectUsersState","selectUsers","selectTotalCount","state","totalCount","routes","path","component","children","redirectTo","pathMatch","UsersRoutingModule","forChild","imports","exports","UsersComponent","UsersModule","declarations"],"mappings":"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","file":"features-users-users-module-es5.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { User } from '../../models/user.model'\nimport { UsersState } from '../../store/users.state'\nimport { select, Store } from '@ngrx/store'\nimport { readUsers } from '../../store/users.actions'\nimport { CollectionParams } from '../../../../shared/models/collection-params.model'\nimport { selectTotalCount, selectUsers } from '../../store/users.selectors'\nimport { selectLoading } from '../../../../shared/store/shared.selectors'\nimport { Observable } from 'rxjs'\nimport { MatSort, Sort } from '@angular/material/sort'\nimport { MatPaginator, PageEvent } from '@angular/material/paginator'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { MatDialog } from '@angular/material/dialog'\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from 'src/app/shared/models/dialog-data.model'\nimport { NewBookingDialogComponent } from 'src/app/shared/components/new-booking-dialog/new-booking-dialog.component'\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator\n\n  public loading$: Observable<boolean>\n  public users$: Observable<User[]>\n  public totalCount$: Observable<number>\n\n  public dataSourceForTable: MatTableDataSource<User>\n  public displayedColumns: string[] = []\n\n  public currentSort: Sort\n  public currentPageIndex: number\n  public currentPageSize: number\n  public currentFilter = ''\n  private readonly defaultSort: Sort = { active: 'id', direction: 'asc' }\n  private readonly defaultPageIndex: number = 0\n  private readonly defaultPageSize: number = 10\n\n  constructor(\n    private store: Store<UsersState>,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.store.pipe(select(selectUsers))\n    this.loading$ = this.store.pipe(select(selectLoading))\n    this.totalCount$ = this.store.pipe(select(selectTotalCount))\n\n    this.users$.subscribe(users => {\n      this.dataSourceForTable = new MatTableDataSource(users)\n    })\n\n    this.activatedRoute.queryParams.subscribe((paramsFromUrl: CollectionParams) => {\n      if (paramsFromUrl?.sortField && paramsFromUrl?.sortDirection) {\n        this.currentSort = {\n          active: paramsFromUrl.sortField,\n          direction: paramsFromUrl.sortDirection,\n        }\n      } else {\n        this.setCurrentSort(this.defaultSort)\n      }\n\n      if (paramsFromUrl?.pageIndex && paramsFromUrl?.pageSize) {\n        this.currentPageIndex = paramsFromUrl.pageIndex\n        this.currentPageSize = paramsFromUrl.pageSize\n      } else {\n        this.setCurrentPageIndexAndSize(this.defaultPageIndex, this.defaultPageSize)\n      }\n\n      if (paramsFromUrl?.filter) {\n        this.currentFilter = paramsFromUrl.filter\n      }\n\n      if (\n        paramsFromUrl?.sortField && paramsFromUrl?.sortDirection &&\n        paramsFromUrl?.pageIndex && paramsFromUrl?.pageSize\n      ) {\n        this.loadUsers()\n      }\n    })\n\n    this.setDisplayedColumns()\n  }\n\n  public onNewBookingClicked() {\n    let dialogRef = this.dialog.open(NewBookingDialogComponent, {\n      width: '98vw',\n      height: '90vh',\n      data: ({\n        title: 'New Booking',\n        message: 'Custom message here...',\n      } as DialogDataModel),\n    })\n  }\n\n  public onRefresh(): void {\n    this.loadUsers()\n  }\n\n  public onMatSortChange($event: Sort): void {\n    this.setCurrentSort($event)\n  }\n\n  public onClear(): void {\n    this.onFilterChange('')\n  }\n\n  public onPageChange($event: PageEvent): void {\n    this.setCurrentPageIndexAndSize($event.pageIndex, $event.pageSize)\n  }\n\n  public onFilterChange($event: string): void {\n    this.currentFilter = $event\n    this.updateQueryParamToUrl({ filter: $event === '' ? null : $event })\n  }\n\n  public onEdit(user: User): void {\n    alert('Edit not implemented yet');\n  }\n\n  private loadUsers(): void {\n    this.store.dispatch(readUsers({\n      collectionParams: {\n        filter: this.currentFilter,\n        sortDirection: this.currentSort.direction,\n        sortField: this.currentSort.active,\n        pageIndex: this.currentPageIndex,\n        pageSize: this.currentPageSize,\n      },\n    }))\n  }\n\n  private setDisplayedColumns(): void {\n    this.displayedColumns = ['id', 'firstName', 'lastName', 'actions']\n  }\n\n  private setCurrentSort(sort: Sort): void {\n    this.currentSort = sort\n    this.updateQueryParamToUrl({ sortField: sort.active, sortDirection: sort.direction })\n  }\n\n  private updateQueryParamToUrl(params: Params) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: params,\n      queryParamsHandling: 'merge',\n    })\n  }\n\n  private setCurrentPageIndexAndSize(pageIndex: number, pageSize: number): void {\n    this.currentPageIndex = pageIndex\n    this.currentPageSize = pageSize\n    this.updateQueryParamToUrl({ pageIndex, pageSize })\n  }\n}\n","Bookings ({{ (totalCount$ | async) }})\n\n<mat-form-field>\n  <mat-label>Search</mat-label>\n  <input matInput [value]=\"currentFilter\" appInput (delayedInput)=\"onFilterChange($event)\">\n</mat-form-field>\n\n<button mat-icon-button (click)=\"onClear()\" [disabled]=\"!currentFilter\">\n  <mat-icon>clear</mat-icon>\n</button>\n\n<button mat-icon-button (click)=\"onRefresh()\">\n  <mat-icon>refresh</mat-icon>\n</button>\n\n<button mat-raised-button color=\"accent\" (click)=\"onNewBookingClicked()\">New Booking\n</button>\n\n<table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForTable\" [matSortActive]=\"currentSort.active\"\n  [matSortDirection]=\"currentSort.direction\" (matSortChange)=\"onMatSortChange($event)\" matSortDisableClear>\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"firstName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n    <td mat-cell *matCellDef=\"let element\"> {{ element.firstName }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"lastName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.lastName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"email\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button (click)=\"onEdit(element)\">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div *ngIf=\"dataSourceForTable.data.length === 0 && !(loading$ | async)\" class=\"row-info\">\n  No users found.\n</div>\n\n<div *ngIf=\"dataSourceForTable.data.length === 0 && (loading$ | async)\" class=\"row-info\">\n  Loading users...\n</div>\n\n<mat-paginator [length]=\"(totalCount$ | async)\" [pageIndex]=\"currentPageIndex\" (page)=\"onPageChange($event)\"\n  [pageSize]=\"currentPageSize\" [pageSizeOptions]=\"[10, 20, 50]\"></mat-paginator>","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { usersAdapter, UsersState } from './users.state'\n\nconst {selectAll} = usersAdapter.getSelectors()\nconst selectUsersState = createFeatureSelector<UsersState>('users')\n\nexport const selectUsers = createSelector(\n  selectUsersState,\n  selectAll,\n)\n\nexport const selectTotalCount = createSelector(\n  selectUsersState,\n  (state) => state.totalCount,\n)\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { UsersComponent } from './users.component'\nimport { UsersListComponent } from './components/users-list/users-list.component'\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [\n      {\n        path: 'list',\n        component: UsersListComponent,\n      },\n      {\n        path: '',\n        redirectTo: 'list',\n        pathMatch: 'full',\n      },\n    ],\n  },\n]\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule { }\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent {\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { UsersRoutingModule } from './users-routing.module'\nimport { UsersComponent } from './users.component'\nimport { UsersListComponent } from './components/users-list/users-list.component'\nimport { SharedModule } from '../../shared/shared.module'\n\n\n@NgModule({\n  declarations: [\n      UsersComponent,\n      UsersListComponent,\n  ],\n    imports: [\n        CommonModule,\n        UsersRoutingModule,\n        SharedModule,\n    ],\n})\nexport class UsersModule {\n}\n"]}