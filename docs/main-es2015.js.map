{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/app-store/app-store.effects.ts","./src/app/core/app-store/app-store.reducers.ts","./src/app/core/components/footer/footer.component.ts","./src/app/core/components/footer/footer.component.html","./src/app/core/components/header/header.component.ts","./src/app/core/components/header/header.component.html","./src/app/core/components/home/home.component.ts","./src/app/core/components/home/home.component.html","./src/app/core/components/notification-page/notification-page.component.ts","./src/app/core/components/notification-page/notification-page.component.html","./src/app/core/components/progress/progress.component.ts","./src/app/core/components/progress/progress.component.html","./src/app/core/core.module.ts","./src/app/core/interceptors/action.interceptor.ts","./src/app/core/interceptors/index.ts","./src/app/core/interceptors/message.interceptor.ts","./src/app/core/services/error-handler.service.ts","./src/app/core/services/error.service.ts","./src/app/core/services/logger.service.ts","./src/app/features/posts/services/posts-api.service.ts","./src/app/features/posts/store/posts.actions.ts","./src/app/features/posts/store/posts.effects.ts","./src/app/features/posts/store/posts.reducer.ts","./src/app/features/posts/store/posts.state.ts","./src/app/features/todos/services/todos-api.service.ts","./src/app/features/todos/store/todos.actions.ts","./src/app/features/todos/store/todos.effects.ts","./src/app/features/todos/store/todos.reducer.ts","./src/app/features/todos/store/todos.state.ts","./src/app/features/users/services/users-api.service.ts","./src/app/features/users/store/users.actions.ts","./src/app/features/users/store/users.effects.ts","./src/app/features/users/store/users.reducer.ts","./src/app/features/users/store/users.state.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.html","./src/app/shared/components/new-booking-dialog/new-booking-dialog.component.ts","./src/app/shared/components/new-booking-dialog/new-booking-dialog.component.html","./src/app/shared/components/notification-bar/notification-bar.component.ts","./src/app/shared/components/notification-bar/notification-bar.component.html","./src/app/shared/components/page-header-back/page-header-back.component.ts","./src/app/shared/components/page-header-back/page-header-back.component.html","./src/app/shared/components/page-header-title/page-header-title.component.ts","./src/app/shared/components/page-header-title/page-header-title.component.html","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/components/page-header/page-header.component.html","./src/app/shared/directives/back-button.directive.ts","./src/app/shared/directives/input-debounce.directive.ts","./src/app/shared/interceptors/index.ts","./src/app/shared/material.module.ts","./src/app/shared/models/snackbar.model.ts","./src/app/shared/services/notification-bar.service.ts","./src/app/shared/services/router-history.service.ts","./src/app/shared/services/unsaved-changes.guard.ts","./src/app/shared/shared.module.ts","./src/app/shared/store/shared.actions.ts","./src/app/shared/store/shared.effects.ts","./src/app/shared/store/shared.reducer.ts","./src/app/shared/store/shared.state.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\nimport { HomeComponent } from './core/components/home/home.component'\nimport { NotificationPageComponent, NotificationPageData } from './core/components/notification-page/notification-page.component'\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'posts',\n    loadChildren: () => import('./features/posts/posts.module').then(m => m.PostsModule),\n  },\n  {\n    path: 'todos',\n    loadChildren: () => import('./features/todos/todos.module').then(m => m.TodosModule),\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./features/users/users.module').then(m => m.UsersModule),\n  },\n  {\n    path: 'examples',\n    loadChildren: () => import('./features/examples/examples.module').then(m => m.ExamplesModule),\n  },\n  {\n    path: '**',\n    component: NotificationPageComponent,\n    data: ({\n      type: 'error',\n      title: 'Page not found',\n      heading: '404',\n      description: 'This is not the page you are looking for.',\n    } as NotificationPageData),\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n  })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter } from 'rxjs/operators'\nimport { Store } from '@ngrx/store'\nimport { SharedState } from './shared/store/shared.state'\nimport { checkIsOnline } from './shared/store/shared.actions'\nimport { RouterHistoryService } from './shared/services/router-history.service'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private store: Store<SharedState>, private router: Router, private routerHistory: RouterHistoryService) {\n    this.store.dispatch(checkIsOnline())\n  }\n\n  ngOnInit(): void {\n    this.router.events.pipe(filter(evt => evt instanceof NavigationEnd)).subscribe((evt: NavigationEnd) => this.routerHistory.push(evt.url))\n  }\n}\n","<app-progress></app-progress>\n\n<mat-sidenav-container class=\"app-wrapper\">\n  <mat-sidenav mode=\"side\" #sidenav class=\"app-sidebar\">\n\n    <mat-nav-list>\n      <mat-list-item routerLink=\"/\">\n        <mat-icon>home</mat-icon><span>Home</span>\n      </mat-list-item>\n      <mat-expansion-panel [class.mat-elevation-z0]=\"true\">\n        <mat-expansion-panel-header>\n          My Lentune\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a mat-list-item routerLink=\"/posts\">\n            <span>Dashboard</span>\n          </a>\n          <a mat-list-item routerLink=\"/users\">\n            <span>Bookings</span>\n          </a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n      <mat-expansion-panel [class.mat-elevation-z0]=\"true\">\n        <mat-expansion-panel-header>\n          Administration\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a mat-list-item routerLink=\"/posts\">Settings</a>\n          <a mat-list-item routerLink=\"/todos\">Profile</a>\n          <a mat-list-item routerLink=\"/examples\">Preferences</a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n    </mat-nav-list>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"app-content\">\n    <app-header (sidenavIconClick)=\"sidenav.toggle()\"></app-header>\n\n    <main class=\"app-content__main\">\n      <router-outlet></router-outlet>\n    </main>\n\n    <app-footer></app-footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule } from './app-routing.module'\nimport { CoreModule } from './core/core.module'\nimport { SharedModule } from './shared/shared.module'\n\nimport { AppComponent } from './app.component'\nimport { HomeComponent } from './core/components/home/home.component'\nimport { HeaderComponent } from './core/components/header/header.component'\nimport { FooterComponent } from './core/components/footer/footer.component'\nimport { NotificationPageComponent } from './core/components/notification-page/notification-page.component'\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    NotificationPageComponent, // TODO: After creating PageHeaderComponent move it to declarations of CoreModule\n  ],\n  imports: [\n    // angular\n    BrowserModule,\n    FormsModule,\n\n    // material design\n    BrowserAnimationsModule,\n\n    // core & shared\n    CoreModule,\n    SharedModule,\n\n    // app routing\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\n\nexport class AppModule {\n}\n","import { Type } from '@angular/core'\nimport { PostsEffects } from '../../features/posts/store/posts.effects'\nimport { SharedEffects } from '../../shared/store/shared.effects'\nimport { TodosEffects } from '../../features/todos/store/todos.effects'\nimport { UsersEffects } from '../../features/users/store/users.effects'\n\n\nexport const appEffects: Type<any>[] = [\n  SharedEffects,\n  PostsEffects,\n  TodosEffects,\n  UsersEffects,\n]\n","import { ActionReducerMap } from '@ngrx/store'\nimport { AppState } from './app-store.state'\nimport { postsReducer } from '../../features/posts/store/posts.reducer'\nimport { sharedReducer } from '../../shared/store/shared.reducer'\nimport { todosReducer } from '../../features/todos/store/todos.reducer'\nimport { usersReducer } from '../../features/users/store/users.reducer'\n\n\nexport const appReducers: ActionReducerMap<AppState> = {\n  shared: sharedReducer,\n  posts: postsReducer,\n  todos: todosReducer,\n  users: usersReducer,\n}\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n}\n","<footer class=\"footer\">\n  <small>2020 &copy; Angular Starter App licensed under MIT for better web</small>\n</footer>\n","import { Component, EventEmitter, Output } from '@angular/core'\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Output() sidenavIconClick = new EventEmitter()\n}\n","<mat-toolbar class=\"app-toolbar\" color=\"primary\">\n  <button mat-icon-button aria-label=\"Toggle app menu\" class=\"app-toolbar__btn-menu\" (click)=\"sidenavIconClick.emit()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <img src=\"assets/logo-white.svg\" class=\"app-toolbar__logo\" alt=\"\"> Lentune Wedding Hire\n\n  <div class=\"app-toolbar__right\">\n    <button mat-icon-button aria-label=\"Toggle user menu\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>person</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>Sign out</button>\n    </mat-menu>\n  </div>\n</mat-toolbar>","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n}\n","<div class=\"hero\">\n    <h1>Welcome to Wedding Essentials Hire</h1>\n    <p>Your one-stop shop for all your wedding needs.</p>\n</div>\n\n<div class=\"section\">\n    <h2>About Us</h2>\n    <p>We specialize in providing high-quality wedding hire services to make your special day unforgettable. From\n        elegant decorations to essential equipment, we have everything you need.</p>\n</div>\n\n<div class=\"section\">\n    <h2>Our Services</h2>\n    <p>Explore our wide range of wedding hire services designed to cater to every aspect of your wedding day.</p>\n    <!-- Add more content here such as a list of services or images -->\n</div>\n\n<div class=\"section\">\n    <h2>Testimonials</h2>\n    <p>Don't just take our word for it. Read what our satisfied clients have to say about our services.</p>\n    <!-- Insert testimonials here -->\n</div>\n\n<footer>\n    <p>Contact Us: info@weddingessentialshire.com</p>\n    <p>Follow us on Social Media</p>\n    <!-- Add links to social media profiles -->\n</footer>","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\n\n@Component({\n  selector: 'app-notification-page',\n  templateUrl: './notification-page.component.html',\n  styleUrls: ['./notification-page.component.scss'],\n})\nexport class NotificationPageComponent implements OnInit {\n\n  public data: NotificationPageData\n  public textCssClass: 'text-success' | 'text-danger' | 'text-primary'\n\n  constructor(private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data: NotificationPageData) => {\n      this.data = data\n\n      switch (data.type) {\n        case 'error': this.textCssClass = 'text-danger'; break\n        case 'success': this.textCssClass = 'text-success'; break\n        case 'info': this.textCssClass = 'text-primary'; break\n      }\n\n      if (!data.icon) {\n        switch (data.type) {\n          case 'error': data.icon = 'clear'; break\n          case 'success': data.icon = 'done'; break\n          case 'info': data.icon = 'info'; break\n        }\n      }\n    })\n  }\n}\n\nexport interface NotificationPageData {\n  type: 'error' | 'success' | 'info',\n  title: string,\n  heading: string,\n  description?: string,\n  icon?: string,\n}\n","<app-page-header>\n  <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n  <app-page-header-title>{{ data.title }}</app-page-header-title>\n</app-page-header>\n\n<div class=\"page-content notification-page__content\">\n  <mat-icon class=\"notification-page__icon\" [ngClass]=\"textCssClass\">{{ data.icon }}</mat-icon>\n  <h2 class=\"mat-display-2 notification-page__heading\">{{ data.heading }}</h2>\n  <p>{{ data.description }}</p>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport { NgProgress, NgProgressRef } from 'ngx-progressbar'\nimport { loadingOff, loadingOn } from '../../../shared/store/shared.actions'\nimport { SharedState } from '../../../shared/store/shared.state'\n\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n})\nexport class ProgressComponent implements OnInit, OnDestroy {\n\n  progressRef: NgProgressRef\n\n  constructor(private store: Store<SharedState>, private ngProgress: NgProgress) {\n  }\n\n  ngOnInit(): void {\n    this.progressRef = this.ngProgress.ref()\n    this.progressRef.started.subscribe(() => this.store.dispatch(loadingOn()))\n    this.progressRef.completed.subscribe(() => this.store.dispatch(loadingOff()))\n  }\n\n  ngOnDestroy() {\n    this.progressRef.destroy()\n  }\n}\n","<ng-progress></ng-progress>\n","import { ErrorHandler, NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { HttpClientModule } from '@angular/common/http'\nimport { environment } from '../../environments/environment'\n\nimport { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\nimport { appReducers } from './app-store/app-store.reducers'\nimport { appEffects } from './app-store/app-store.effects'\n\nimport { ErrorHandlerService } from './services/error-handler.service'\nimport { httpInterceptorProviders } from './interceptors'\nimport { ProgressComponent } from './components/progress/progress.component'\nimport { NgProgressModule } from 'ngx-progressbar'\nimport { NgProgressHttpModule } from 'ngx-progressbar/http'\n\n\n@NgModule({\n  declarations: [\n    ProgressComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n\n    //  ngrx\n    StoreModule.forRoot(appReducers),\n    EffectsModule.forRoot(appEffects),\n    StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\n\n    // ngProgess\n    NgProgressModule.withConfig({spinner: false}),\n    NgProgressHttpModule,\n  ],\n  providers: [\n    ...httpInterceptorProviders,\n    {provide: ErrorHandler, useClass: ErrorHandlerService},\n  ],\n  exports: [\n    ProgressComponent,\n  ],\n})\n\nexport class CoreModule {\n}\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, tap } from 'rxjs/operators'\n\n\n@Injectable()\nexport class ActionInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const responseStatusCode: number = event.status\n          this.statusCodeHandler(responseStatusCode)\n        }\n      }),\n      catchError((error: Error | HttpErrorResponse): Observable<any> => {\n        if (error instanceof HttpErrorResponse) {\n          const errorStatusCode: number = error.status\n          this.statusCodeHandler(errorStatusCode)\n        }\n        return throwError(error)\n      }),\n    )\n  }\n\n  private statusCodeHandler(code: number) {\n    switch (code) {\n      case 401:\n        this.router.navigate(['/login'])\n        break\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { MessageInterceptor } from './message.interceptor'\nimport { ActionInterceptor } from './action.interceptor'\n\nexport const httpInterceptorProviders = [\n  {provide: HTTP_INTERCEPTORS, useClass: MessageInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: ActionInterceptor, multi: true},\n]\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { ErrorService } from '../services/error.service'\nimport { NotificationBarService } from '../../shared/services/notification-bar.service'\nimport { catchError, tap } from 'rxjs/operators'\nimport { HttpResponseModel } from '../../shared/models/http-response-model.model'\n\n\n@Injectable()\nexport class MessageInterceptor implements HttpInterceptor {\n\n  constructor(private errorService: ErrorService, private notificationService: NotificationBarService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const responseData: HttpResponseModel<any> = event.body\n          if (responseData && responseData.message && !event.url.includes('/err-logs')) {\n            this.notificationService.showSuccess(responseData.message)\n          }\n        }\n      }),\n      catchError((error: Error | HttpErrorResponse): Observable<any> => {\n        if (error instanceof HttpErrorResponse) {\n          const errorMsg = this.errorService.getServerMessage(error)\n          this.notificationService.showError(errorMsg)\n        }\n        return throwError(error)\n      }),\n    )\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core'\nimport { LoggerService } from './logger.service'\nimport { environment } from '../../../environments/environment'\n\n@Injectable()\nexport class ErrorHandlerService extends ErrorHandler {\n  constructor(private loggerService: LoggerService) {\n    super()\n  }\n\n  public handleError(error: any) {\n    if (environment.production) {\n      this.loggerService.logError(error)\n    }\n\n    super.handleError(error)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n\n  public getClientMessage(error: Error): string {\n    return error.message || error.toString()\n  }\n\n  public getServerMessage(error: HttpErrorResponse): string {\n    return (error.error && error.error.message) || error.statusText\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { ErrMessage } from '../models/err-message.model'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { environment } from '../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public logError(error: any) {\n    const errMessage: ErrMessage = this.createErrMessage(error)\n    this.http.post(`${environment.baseUrl}/err-logs`, errMessage).subscribe()\n  }\n\n  private createErrMessage(error: any): ErrMessage {\n    const date = new Date().toISOString()\n    if (error instanceof HttpErrorResponse) {\n      return {\n        date,\n        type: 'HTTP ERR',\n        message: error.message,\n        status: error.status,\n      }\n    } else if (error instanceof TypeError) {\n      return {\n        date,\n        type: 'TYPE ERR',\n        message: error.message,\n      }\n    } else if (error instanceof Error) {\n      return {\n        date,\n        type: 'GENERAL ERR',\n        message: error.message,\n      }\n    } else {\n      return {\n        date,\n        type: 'UNKNOWN ERR',\n        message: error.message,\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { Post } from '../models/post.model'\nimport { Observable } from 'rxjs'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\n\nconst POSTS_API_ENDPOINT = '/posts'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsApiService implements ApiServiceModel<Post> {\n  constructor(private http: HttpClient) {\n  }\n\n  public createItem(post: Post): Observable<object> {\n    return this.http.post(`${environment.baseUrl}${POSTS_API_ENDPOINT}`, post)\n  }\n\n  public readItems(): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${POSTS_API_ENDPOINT}`)\n  }\n\n  public readItem(id: string): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`)\n  }\n\n  public updateItem(id: string, changes: Partial<Post>): Observable<object> {\n    return this.http.put(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`, changes)\n  }\n\n  public deleteItem(id: string): Observable<object> {\n    return this.http.delete(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`)\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { Post } from '../models/post.model'\nimport { Update } from '@ngrx/entity'\n\n// CRUD\n\n// Create Post\nexport const createPostsItem = createAction('[Posts] Create Post', props<{ post: Partial<Post> }>())\nexport const createPostsItemSuccess = createAction('[Posts] Create Create Success', props<{ post: Post }>())\nexport const createPostsItemFail = createAction('[Posts] Create Create Fail')\n\n// Read Posts\nexport const readPosts = createAction('[Posts] Read Posts')\nexport const readPostsSuccess = createAction('[Posts] Read Posts Success', props<{ posts: Post[] }>())\nexport const readPostsFail = createAction('[Posts] Read Posts Fail')\n\n// Read Post\nexport const readPostsItem = createAction('[Posts] Read Post', props<{ id: string }>())\nexport const readPostsItemSuccess = createAction('[Posts] Read Post Success', props<{ post: Post }>())\nexport const readPostsItemFail = createAction('[Posts] Read Post Fail')\n\n// Update Post\nexport const updatePostsItem = createAction('[Posts] Update Post', props<{ updatePost: Update<Post> }>())\nexport const updatePostsItemSuccess = createAction('[Posts] Update Post Success')\nexport const updatePostsItemFail = createAction('[Posts] Update Post Fail')\n\n// Delete Post\nexport const deletePostsItem = createAction('[Posts] Delete Post', props<{ id: string }>())\nexport const deletePostsItemSuccess = createAction('[Posts] Delete Post Success')\nexport const deletePostsItemFail = createAction('[Posts] Delete Post Fail')\n","import { Injectable } from '@angular/core'\nimport { PostsApiService } from '../services/posts-api.service'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport {\n  createPostsItem,\n  createPostsItemFail,\n  createPostsItemSuccess,\n  deletePostsItem,\n  deletePostsItemFail,\n  deletePostsItemSuccess,\n  readPostsItem,\n  readPostsItemFail,\n  readPosts,\n  readPostsFail,\n  readPostsSuccess,\n  readPostsItemSuccess,\n  updatePostsItem,\n  updatePostsItemFail,\n  updatePostsItemSuccess,\n} from './posts.actions'\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators'\nimport { HttpResponseModel } from '../../../shared/models/http-response-model.model'\nimport { Post } from '../models/post.model'\nimport { of } from 'rxjs'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class PostsEffects {\n\n  constructor(private postsService: PostsApiService, private actions$: Actions, private router: Router) {\n  }\n\n  // CRUD\n\n  createPost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createPostsItem.type),\n      mergeMap(({post}) => this.postsService.createItem(post).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: createPostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: createPostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  readPosts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(readPosts.type),\n      mergeMap(() => this.postsService.readItems().pipe(\n        map((response: HttpResponseModel<Post[]>) => ({\n          type: readPostsSuccess.type,\n          posts: response,\n        })),\n        catchError(() => of({\n          type: readPostsFail.type,\n        })),\n      )),\n    ),\n  )\n\n  readPost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(readPostsItem.type),\n      mergeMap(({id}) => this.postsService.readItem(id).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: readPostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: readPostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  updatePost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updatePostsItem.type),\n      mergeMap((({updatePost}: {updatePost: {id: string, changes: Post}}) =>\n        this.postsService.updateItem(updatePost.id, updatePost.changes).pipe(\n          map((response: HttpResponseModel<Post>) => ({\n            type: updatePostsItemSuccess.type,\n            post: response,\n          })),\n          catchError(() => of({\n            type: updatePostsItemFail.type,\n          })),\n        )),\n      ),\n    ),\n  )\n\n  deletePost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deletePostsItem.type),\n      mergeMap(({id}) => this.postsService.deleteItem(id).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: deletePostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: deletePostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  navigate$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(createPostsItemSuccess.type, updatePostsItemSuccess.type, deletePostsItemSuccess.type),\n        tap(({user}) => this.router.navigate(['/', 'posts'])),\n      ),\n    {dispatch: false},\n  )\n}\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialPostsState, postsAdapter, PostsState } from './posts.state'\nimport { createPostsItemSuccess, deletePostsItem, readPostsSuccess, readPostsItemSuccess, updatePostsItem } from './posts.actions'\n\n\nconst reducer = createReducer(\n  initialPostsState,\n  on(createPostsItemSuccess, (state, { post }) => postsAdapter.addOne(post, state)),\n  on(readPostsSuccess, (state, { posts }) => postsAdapter.setAll(posts, state)),\n  on(readPostsItemSuccess, (state, { post }) => postsAdapter.upsertOne(post, state)),\n  on(updatePostsItem, (state, { updatePost}) => postsAdapter.updateOne(updatePost, state)),\n  on(deletePostsItem, (state, { id }) => postsAdapter.removeOne(id, state)),\n)\n\nexport function postsReducer(state: PostsState, action: Action) {\n  return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { Post } from '../models/post.model'\n\nexport interface PostsState extends EntityState<Post> {\n}\n\nexport const postsAdapter: EntityAdapter<Post> = createEntityAdapter<Post>({\n  selectId: (item: Post) => item.id,\n  sortComparer: false,\n})\n\nexport const initialPostsState: PostsState = postsAdapter.getInitialState({\n})\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { Todo } from '../models/todo'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\nimport { Observable } from 'rxjs'\n\nconst TODOS_API_ENDPOINT = '/todos'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodosApiService implements ApiServiceModel<Todo> {\n  constructor(private http: HttpClient) {\n  }\n\n  public createItem(todo: Todo): Observable<object> {\n    return this.http.post(`${environment.baseUrl}${TODOS_API_ENDPOINT}`, todo)\n  }\n\n  public readItems(): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${TODOS_API_ENDPOINT}`)\n  }\n\n  public updateItem(id: string, changes: Partial<Todo>): Observable<object> {\n    return this.http.put(`${environment.baseUrl}${TODOS_API_ENDPOINT}/${id}`, changes)\n  }\n\n  public deleteItem(id: string): Observable<object> {\n    return this.http.delete(`${environment.baseUrl}${TODOS_API_ENDPOINT}/${id}`)\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { Update } from '@ngrx/entity'\nimport { Todo } from '../models/todo'\n\nexport const createTodosItem = createAction('[Todos/API] Add Item', props<{ todo: Partial<Todo> }>())\nexport const createTodosItemSuccess = createAction('[Todos/API] Add Item Success', props<{ todo: Todo }>())\nexport const createTodosItemFail = createAction('[Todos/API] Add Item FAIL')\n\nexport const readTodos = createAction('[Todos/API] Fetch All')\nexport const readTodosSuccess = createAction('[Todos/API] Fetch All Success', props<{ todos: Todo[] }>())\nexport const readTodosFail = createAction('[Todos/API] Fetch All FAIL')\n\nexport const updateTodosItem = createAction('[Todos/API] Update Item', props<{ updateTodo: Update<Todo> }>())\nexport const updateTodosItemSuccess = createAction('[Todos/API] Update Item Success')\nexport const updateTodosItemFail = createAction('[Todos/API] Update Item FAIL')\n\nexport const deleteTodosItem = createAction('[Todos/API] Delete Item', props<{ todoId: string }>())\nexport const deleteTodosItemSuccess = createAction('[Todos/API] Delete Item Success')\nexport const deleteTodosItemFail = createAction('[Todos/API] Delete Item FAIL')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { TodosApiService } from '../services/todos-api.service'\nimport {\n  createTodosItem, createTodosItemFail, createTodosItemSuccess, deleteTodosItem, deleteTodosItemFail, deleteTodosItemSuccess,\n  readTodos,\n  readTodosFail,\n  readTodosSuccess,\n  updateTodosItem,\n  updateTodosItemFail,\n  updateTodosItemSuccess,\n} from './todos.actions'\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { Todo } from '../models/todo'\n\n@Injectable()\nexport class TodosEffects {\n  constructor(private readonly actions: Actions, private todosService: TodosApiService) {\n  }\n\n  createTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(createTodosItem.type),\n      mergeMap(({todo}: {todo: Todo}) =>\n        this.todosService.createItem(todo).pipe(\n          map((response: Todo) => ({\n            type: createTodosItemSuccess.type,\n            todo: response,\n          })),\n          catchError(() => of({type: createTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n\n  readTodosItems$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(readTodos.type),\n      switchMap(() => this.todosService.readItems().pipe(\n        map((response: Todo[]) => ({\n          type: readTodosSuccess.type,\n          todos: response,\n        })),\n        catchError(() => of({type: readTodosFail.type})),\n      )),\n    ),\n  )\n\n  updateTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(updateTodosItem.type),\n      mergeMap(({updateTodo}: {updateTodo: {id: string, changes: Todo}}) =>\n        this.todosService.updateItem(updateTodo.id, updateTodo.changes).pipe(\n          map(() => ({type: updateTodosItemSuccess.type})),\n          catchError(() => of({type: updateTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n\n  deleteTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(deleteTodosItem.type),\n      mergeMap(({todoId}: {todoId: string}) =>\n        this.todosService.deleteItem(todoId).pipe(\n          map(() => ({type: deleteTodosItemSuccess.type})),\n          catchError(() => of({type: deleteTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n}\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialTodosState, todosAdapter, TodosState } from './todos.state'\nimport { createTodosItemSuccess, deleteTodosItem, readTodosSuccess, updateTodosItem } from './todos.actions'\n\nconst reducer = createReducer(\n  initialTodosState,\n  on(createTodosItemSuccess, (state, { todo }) => todosAdapter.addOne(todo, state)),\n  on(readTodosSuccess, (state, { todos }) => todosAdapter.setAll(todos, state)),\n  on(updateTodosItem, (state, { updateTodo }) => todosAdapter.updateOne(updateTodo, state)),\n  on(deleteTodosItem, (state, { todoId }) => todosAdapter.removeOne(todoId, state)),\n)\n\nexport function todosReducer(state: TodosState, action: Action) {\n  return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { Todo } from '../models/todo'\n\nexport interface TodosState extends EntityState<Todo> {\n}\n\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>({\n  selectId: (item: Todo) => item.id,\n  sortComparer: false,\n})\n\nexport const initialTodosState: TodosState = todosAdapter.getInitialState({\n})\n","import { Injectable } from '@angular/core'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\nimport { User } from '../models/user.model'\nimport { Observable } from 'rxjs'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { CollectionParams } from '../../../shared/models/collection-params.model'\n\nconst USERS_API_ENDPOINT = '/users'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersApiService implements ApiServiceModel<User> {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public readItems(collectionParams: CollectionParams): Observable<object> {\n    let params = new HttpParams()\n\n    if (collectionParams?.filter !== '') {\n      params = params.set('filter', collectionParams?.filter)\n    }\n    params = params.set('sortDirection', collectionParams?.sortDirection)\n    params = params.set('sortField', collectionParams?.sortField)\n    params = params.set('pageIndex', collectionParams?.pageIndex?.toString())\n    params = params.set('pageSize', collectionParams?.pageSize?.toString())\n\n    return this.http.get(`${document.baseURI}/assets${USERS_API_ENDPOINT}`, { params })\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { User } from '../models/user.model'\nimport { CollectionParams } from '../../../shared/models/collection-params.model'\n\nexport const readUsers = createAction('[Users/API] Fetch All Users', props<{ collectionParams: CollectionParams }>())\nexport const readUsersSuccess = createAction('[Users/API] Fetch All Users Success', props<{ users: User[], totalCount: number }>())\nexport const readUsersFail = createAction('[Users/API] Fetch All Users Fail')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { UsersApiService } from '../services/users-api.service'\nimport { readUsers, readUsersFail, readUsersSuccess } from './users.actions'\nimport { User } from '../models/user.model'\n\n@Injectable()\nexport class UsersEffects {\n    constructor(private readonly actions: Actions, private usersApiService: UsersApiService) {\n    }\n\n    readUsersItems$ = createEffect(() =>\n        this.actions.pipe(\n            ofType(readUsers.type),\n            switchMap(({ collectionParams }) => this.usersApiService.readItems(collectionParams).pipe(\n                map((response: User[]) => ({\n                    type: readUsersSuccess.type,\n                    users: response,\n                    totalCount: response.length,\n                })),\n                catchError(() => of({ type: readUsersFail.type })),\n            )),\n        ),\n    )\n}\n\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialUsersState, usersAdapter, UsersState } from './users.state'\nimport { readUsersSuccess } from './users.actions'\n\nconst reducer = createReducer(\n    initialUsersState,\n    on(readUsersSuccess, (state, { users , totalCount}) => {\n      return usersAdapter.setAll(users, {...state, totalCount})\n    }),\n)\n\nexport function usersReducer(state: UsersState, action: Action) {\n    return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { User } from '../models/user.model'\n\nexport interface UsersState extends EntityState<User> {\n  totalCount: number\n}\n\nexport const usersAdapter: EntityAdapter<User> = createEntityAdapter<User>({\n    selectId: (item: User) => item.id,\n    sortComparer: false,\n})\n\nexport const initialUsersState: UsersState = usersAdapter.getInitialState({\n  totalCount: 0,\n})\n","import { Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { DialogDataModel } from '../../models/dialog-data.model'\n\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogDataModel) {\n  }\n}\n","<h1 mat-dialog-title>{{ data.title || 'Confirm' }}</h1>\n<div mat-dialog-content>\n  <p>{{ data.message }}</p>\n</div>\n<div mat-dialog-actions class=\"confirm-dialog__actions\">\n  <button mat-flat-button [mat-dialog-close]=\"false\">\n    {{ data.btnCancel || 'Cancel' }}\n  </button>\n  <button mat-flat-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">\n    {{ data.btnOk || 'OK' }}\n  </button>\n</div>","import { Component, Inject, OnInit } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { DialogDataModel } from '../../models/dialog-data.model'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { SelectionModel } from '@angular/cdk/collections'\n\nclass BookingLine {\n  Code: string\n  Description: string\n  Branch: string\n  Quantity: number\n  StartDate: Date\n  EndDate: Date\n}\n\nclass HireableItem {\n  Code: string\n  Description: string\n  Branch: string\n  Available: number\n}\n\n@Component({\n  selector: 'app-new-booking-dialog',\n  templateUrl: './new-booking-dialog.component.html',\n  styleUrls: ['./new-booking-dialog.component.scss'],\n})\nexport class NewBookingDialogComponent implements OnInit {\n\n  displayedColumns: string[] = []\n  displayedSearchColumns: string[] = [];\n\n  public dataSourceForTable: MatTableDataSource<BookingLine>;\n  public dataSourceForSearchTable: MatTableDataSource<HireableItem>;\n\n  private allHireableItems: HireableItem[] = [\n    { Code: '001', Description: 'Dining table', Branch: 'Avonhead', Available: 58 },\n    { Code: '002', Description: 'Dining chair', Branch: 'Avonhead', Available: 448 },\n    { Code: '003', Description: 'Cutlery sets', Branch: 'Sydenham', Available: 514 },\n    { Code: '004', Description: 'Placemats', Branch: 'Sydenham', Available: 475 },\n    { Code: '005', Description: 'Lectern', Branch: 'Sydenham', Available: 0 },\n    { Code: '006', Description: '14m Red carpet', Branch: 'Avonhead', Available: 3 },\n    { Code: '007', Description: '2m White Ribbons', Branch: 'Avonhead', Available: 1022 },\n    { Code: '008', Description: '2m Pale Pink Ribbons', Branch: 'Avonhead', Available: 922 },\n    { Code: '009', Description: 'Dinner plates', Branch: 'Sydenham', Available: 740 },\n    { Code: '010', Description: 'Side plates', Branch: 'Avonhead', Available: 871 },\n    { Code: '011', Description: 'Deck chairs', Branch: 'Avonhead', Available: 58 },\n    { Code: '012', Description: '45sqm Marqee', Branch: 'Avonhead', Available: 2 },\n    { Code: '013', Description: '90sqm Marqee', Branch: 'Sydenham', Available: 1 },\n    { Code: '014', Description: 'Blue glass vase', Branch: 'Sydenham', Available: 32 },\n    { Code: '015', Description: 'Yellow glass vase', Branch: 'Sydenham', Available: 0 },\n    { Code: '016', Description: '10m White carpet', Branch: 'Avonhead', Available: 2 },\n    { Code: '017', Description: 'Speaker sound system', Branch: 'Avonhead', Available: 2 },\n    { Code: '018', Description: 'Speaker sound system', Branch: 'Sydenham', Available: 1 },\n    { Code: '019', Description: 'White napkin', Branch: 'Sydenham', Available: 212 },\n    { Code: '020', Description: 'Blue napkin', Branch: 'Avonhead', Available: 142 },\n  ];\n\n  keywords = '';\n  selection: SelectionModel<HireableItem>;\n  bookingStart: string;\n  bookingEnd: string;\n  quantity: string;\n\n  selectedItem: HireableItem = {\n    Code: '',\n    Description: '',\n    Branch: '',\n    Available: 0,\n  };\n\n  constructor(public dialogRef: MatDialogRef<NewBookingDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogDataModel) {\n  }\n\n  getImageNumber(code: string) {\n    return parseInt(code) % 3 + 1;\n  }\n\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSourceForSearchTable.data.length;\n    return numSelected == numRows;\n  }\n\n  onBookClicked() {\n    let existingItems = this.dataSourceForTable.data;\n\n    let newItem = {\n      Code: this.selectedItem.Code,\n      Description: this.selectedItem.Description,\n      Branch: this.selectedItem.Branch,\n      Quantity: parseInt(this.quantity),\n      StartDate: new Date(this.bookingStart),\n      EndDate: new Date(this.bookingEnd),\n    };\n\n    this.dataSourceForTable = new MatTableDataSource([...existingItems, newItem]);\n  }\n\n  toggleAllRows() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSourceForSearchTable.data.forEach(row => this.selection.select(row));\n  }\n\n  ngOnInit(): void {\n    this.dataSourceForTable = new MatTableDataSource([]);\n    this.dataSourceForSearchTable = new MatTableDataSource(this.allHireableItems);\n\n    this.setDisplayedColumns()\n\n    const initialSelection = [];\n    const allowMultiSelect = false;\n    this.selection = new SelectionModel<HireableItem>(allowMultiSelect, initialSelection);\n\n    this.selection.changed.subscribe({\n      next: this.setHireableItem.bind(this),\n      error: this.handleError.bind(this)\n    });\n  }\n\n  setHireableItem(event: any): void {\n    if (event.added.length === 1) {\n      let itemAdded = event.added[0];\n      this.selectedItem = { ...itemAdded };\n    } else {\n      this.selectedItem = null;\n    }\n  }\n\n  handleError(error: any): void {\n  }\n\n  private setDisplayedColumns(): void {\n    this.displayedColumns = ['Code', 'Description', 'Branch', 'Quantity', 'StartDate', 'EndDate', 'Actions'];\n    this.displayedSearchColumns = ['select', 'Code', 'Description', 'Branch', 'Available'];\n  }\n\n  onSearchClicked() {\n    let items = this.allHireableItems.filter(x => x.Description.toLocaleLowerCase().includes(this.keywords.toLocaleLowerCase()));\n    this.dataSourceForSearchTable = new MatTableDataSource(items);\n  }\n\n  onDelete(element) {\n    let newItems = this.dataSourceForTable.data.filter(x => x !== element);\n    this.dataSourceForTable = new MatTableDataSource(newItems);\n  }\n}\n","<div class=\"dialog-header\">\n  <h1 mat-dialog-title>{{ data.title || 'Confirm' }}</h1>\n\n  <div class=\"fill\"></div>\n\n  <div>\n\n    <button mat-stroked-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">\n      {{ data.btnOk || 'Save' }}\n    </button>\n\n    <button mat-stroked-button [mat-dialog-close]=\"false\">\n      {{ data.btnCancel || 'Cancel' }}\n    </button>\n\n  </div>\n</div>\n\n<div class=\"dialog-header-bottom-border\"></div>\n\n<div mat-dialog-content>\n\n  <div class=\"flex-container\">\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Contact Person</mat-label>\n      <input matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Delivery address</mat-label>\n      <textarea matInput rows=\"4\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Booking notes</mat-label>\n      <textarea matInput rows=\"4\"></textarea>\n    </mat-form-field>\n\n  </div>\n\n  <div class=\"booking-line-table-container\">\n    <table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForTable\" matSortDisableClear>\n\n      <ng-container matColumnDef=\"Code\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.Code}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.Description }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Branch\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.Branch}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Quantity\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.Quantity}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"StartDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>StartDate</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.StartDate}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"EndDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>EndDate</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.EndDate}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button (click)=\"onDelete(element)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <h4 class=\"search-box-header\">Search items for hire</h4>\n  <div class=\"search-box\">\n\n    <div class=\"flex-container\" style=\"margin-top: 15px;\">\n\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n        <mat-label>Keywords</mat-label>\n        <input matInput [(ngModel)]=\"keywords\">\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n        <mat-label>Availability start date</mat-label>\n        <input matInput>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n        <mat-label>Availability end date</mat-label>\n        <input matInput>\n      </mat-form-field>\n\n    </div>\n\n    <div class=\"flex-container\">\n      <div class=\"fill\" style=\"margin-right: 15px;\">\n\n        <button mat-stroked-button color=\"primary\" class=\"full-width\" (click)=\"onSearchClicked()\">Search</button>\n\n        <div class=\"search-table-container\">\n          <table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForSearchTable\" matSortDisableClear>\n\n            <ng-container matColumnDef=\"select\">\n              <th mat-header-cell *matHeaderCellDef>\n                <!--mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\n                  [checked]=\"selection.hasValue() && isAllSelected()\"\n                  [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                </mat-checkbox-->\n              </th>\n              <td mat-cell *matCellDef=\"let row\">\n                <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n                  [checked]=\"selection.isSelected(row)\">\n                </mat-checkbox>\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Code\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"selection.toggle(element)\">{{element.Code}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Description\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"selection.toggle(element)\"> {{ element.Description }}\n              </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Branch\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"selection.toggle(element)\">{{element.Branch}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Available\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header>Available</th>\n              <td mat-cell *matCellDef=\"let element\" (click)=\"selection.toggle(element)\">{{element.Available}} </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedSearchColumns, sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedSearchColumns;\"></tr>\n          </table>\n        </div>\n      </div>\n      <div class=\"fill\">\n        <button mat-stroked-button color=\"primary\" class=\"full-width\">Email us to enquire about special orders</button>\n\n\n        <div class=\"flex-container\" style=\"margin-top: 15px;\">\n\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Branch</mat-label>\n            <input matInput [(ngModel)]=\"selectedItem.Branch\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Booking start</mat-label>\n            <input matInput [(ngModel)]=\"bookingStart\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Booking end</mat-label>\n            <input matInput [(ngModel)]=\"bookingEnd\">\n          </mat-form-field>\n\n          <!--mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Booking end</mat-label>\n            <input matInput [matDatepicker]=\"picker2\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n            <mat-datepicker #picker2></mat-datepicker>\n          </mat-form-field-->\n\n        </div>\n\n        <div class=\"flex-container\">\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Quantity</mat-label>\n            <input matInput [(ngModel)]=\"quantity\">\n          </mat-form-field>\n\n          <div class=\"fill\">\n            <button mat-stroked-button color=\"accent\" class=\"full-width\" (click)=\"onBookClicked()\">Book</button>\n          </div>\n\n        </div>\n\n        <div class=\"flex-container\">\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Code</mat-label>\n            <input [readonly]=\"true\" matInput [value]=\"selectedItem?.Code\">\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n            <mat-label>Description</mat-label>\n            <input [readonly]=\"true\" matInput [value]=\"selectedItem?.Description\">\n          </mat-form-field>\n\n        </div>\n\n        <div *ngIf=\"selectedItem.Code\">\n          <img [src]=\"'assets/WeddingHireItems' + getImageNumber(selectedItem.Code) + '.png'\" style=\"height:200px\">\n        </div>\n\n        <div *ngIf=\"selectedItem.Code\">\n          <iframe\n            src=\"https://calendar.google.com/calendar/embed?src=g158je1dkc4hk36uvafj8aerc0%40group.calendar.google.com&ctz=Pacific%2FAuckland\"\n            style=\"border: 0\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>","import { Component, Inject } from '@angular/core'\nimport { MAT_SNACK_BAR_DATA, MatSnackBar } from '@angular/material/snack-bar'\n\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification-bar.component.html',\n  styleUrls: ['./notification-bar.component.scss'],\n})\nexport class NotificationBarComponent {\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: { text: string }, public snackBar: MatSnackBar) {\n  }\n}\n","<div class=\"notification\">\n  <div class=\"notification__text\">\n    {{ data.text }}\n  </div>\n\n  <div class=\"notification__action\">\n    <button mat-icon-button (click)=\"snackBar.dismiss()\" class=\"notification__action-button\">\n      <mat-icon class=\"notification__action-icon\">close</mat-icon>\n    </button>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { RouterHistoryService } from '../../services/router-history.service'\n\n\n@Component({\n  selector: 'app-page-header-back',\n  templateUrl: './page-header-back.component.html',\n  styleUrls: ['./page-header-back.component.scss'],\n})\nexport class PageHeaderBackComponent {\n\n  @Input() link: string\n  @Input() ariaLabel: string\n\n  constructor(private router: Router, private routerHistory: RouterHistoryService) {\n  }\n\n  onBackClick() {\n    this.router.navigateByUrl(this.routerHistory.getLatestFrom(this.link) || this.link)\n  }\n}\n","<button mat-icon-button color=\"primary\" (click)=\"onBackClick()\" [attr.aria-label]=\"ariaLabel\">\n  <mat-icon>arrow_back</mat-icon>\n</button>\n","import { Component, Input } from '@angular/core'\n\n\n@Component({\n  selector: 'app-page-header-title',\n  templateUrl: './page-header-title.component.html',\n  styleUrls: ['./page-header-title.component.scss'],\n})\nexport class PageHeaderTitleComponent {\n\n  @Input() addons: string | number\n}\n","<div class=\"page-header-title\">\n  <h1 class=\"mat-headline page-header__heading page-header-title__heading\">\n    <ng-content></ng-content>\n  </h1>\n\n  <span class=\"page-header__addons\">{{ addons }}</span>\n</div>\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent {\n}\n","<header class=\"mat-toolbar-single-row page-header\">\n  <ng-content></ng-content>\n</header>\n","import { Directive, HostListener } from '@angular/core'\nimport { Location } from '@angular/common'\n\n\n@Directive({\n  selector: '[appBackButton]',\n})\nexport class BackButtonDirective {\n\n  constructor(private location: Location) {\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.location.back()\n  }\n}\n","import { Directive, ElementRef, OnInit, EventEmitter, Output } from '@angular/core'\nimport { fromEvent } from 'rxjs'\nimport { debounceTime, map } from 'rxjs/operators'\n\n@Directive({\n  selector: '[appInput]',\n})\nexport class InputDebounceDirective implements OnInit {\n\n  @Output() delayedInput: EventEmitter<string>\n\n  constructor(private elementRef: ElementRef) {\n    this.delayedInput = new EventEmitter()\n  }\n\n  ngOnInit(): void {\n    fromEvent(this.elementRef.nativeElement, 'input')\n      .pipe(\n        map(() => this.elementRef.nativeElement.value),\n        debounceTime(800),\n      )\n      .subscribe((input: string) => this.delayedInput.next(input))\n  }\n}\n","export const sharedInterceptorProviders = [\n]\n","import { NgModule } from '@angular/core'\n\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatListModule } from '@angular/material/list'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatPaginatorModule } from '@angular/material/paginator'\n\n\n@NgModule({\n  exports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatMenuModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatRippleModule,\n  ],\n})\nexport class MaterialModule {\n}\n","import { MatSnackBarConfig } from '@angular/material/snack-bar'\n\nexport const defaultSnackBarConfig: MatSnackBarConfig = {\n  duration: 2000,\n  panelClass: ['app-snack-bar'],\n}\n\nexport const successSnackBarConfig: MatSnackBarConfig = {\n  duration: 2000,\n  announcementMessage: 'Success.',\n  panelClass: ['app-snack-bar', 'app-snack-bar_success'],\n  verticalPosition: 'top',\n}\n\nexport const errorSnackBarConfig: MatSnackBarConfig = {\n  duration: 10000,\n  announcementMessage: 'An unknown error occurred.',\n  panelClass: ['app-snack-bar', 'app-snack-bar_error'],\n  verticalPosition: 'top',\n}\n","import { Injectable, NgZone } from '@angular/core'\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar'\nimport { NotificationBarComponent } from '../components/notification-bar/notification-bar.component'\nimport { defaultSnackBarConfig, errorSnackBarConfig, successSnackBarConfig } from '../models/snackbar.model'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationBarService {\n\n  constructor(public snackBar: MatSnackBar, private zone: NgZone) {\n  }\n\n  public showInfo(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(defaultSnackBarConfig, message, duration)\n  }\n\n  public showSuccess(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(successSnackBarConfig, message, duration)\n  }\n\n  public showError(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(errorSnackBarConfig, message, duration)\n  }\n\n  private show(defaultConfig: MatSnackBarConfig, message: string, duration?: number) {\n    const snackBarConfig: MatSnackBarConfig = duration ? {...defaultConfig, duration} : defaultConfig\n    let ref\n\n    if (message) {\n      this.zone.run(() => ref = this.snackBar.openFromComponent(NotificationBarComponent, {\n        ...snackBarConfig,\n        data: {text: message},\n      }))\n    }\n\n    return ref\n  }\n\n  public dismiss(snackBarRef: MatSnackBarRef<SimpleSnackBar>): void {\n    return snackBarRef.dismiss()\n  }\n}\n","import { Injectable } from '@angular/core'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterHistoryService {\n\n  private urls: string[] = []\n\n  public push(url: string): void {\n    this.urls.unshift(url)\n  }\n\n  public getLatestFrom(patternUrl: string): string | undefined {\n    return this.urls.find(url => url.indexOf(patternUrl) === 0)\n  }\n}\n","import { CanDeactivate } from '@angular/router'\nimport { Injectable } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { Observable, of } from 'rxjs'\nimport { CanDeactivateComponentModel } from '../models/can-deactivate-component.model'\nimport { ConfirmDialogComponent } from '../components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from '../models/dialog-data.model'\n\n\n@Injectable()\nexport class UnsavedChangesGuard implements CanDeactivate<CanDeactivateComponentModel> {\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  canDeactivate(component: CanDeactivateComponentModel): Observable<boolean> {\n\n    if (component.canDeactivate()) {\n      return of(true)\n    }\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: ({\n        title: 'Confirm Navigation',\n        message: 'You have unsaved changes. Are you sure you want to leave this page?',\n        btnCancel: 'Stay on this Page',\n        btnOk: 'Leave this Page',\n      } as DialogDataModel),\n    })\n\n    return dialogRef.afterClosed()\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { MaterialModule } from './material.module'\n\nimport { sharedInterceptorProviders } from './interceptors'\nimport { BackButtonDirective } from './directives/back-button.directive'\nimport { InputDebounceDirective } from './directives/input-debounce.directive'\nimport { UnsavedChangesGuard } from './services/unsaved-changes.guard'\nimport { NotificationBarComponent } from './components/notification-bar/notification-bar.component'\nimport { PageHeaderComponent } from './components/page-header/page-header.component'\nimport { PageHeaderBackComponent } from './components/page-header-back/page-header-back.component'\nimport { PageHeaderTitleComponent } from './components/page-header-title/page-header-title.component'\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component'\nimport { NewBookingDialogComponent } from './components/new-booking-dialog/new-booking-dialog.component'\nimport { FormsModule } from '@angular/forms'\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MaterialModule,\n  ],\n  declarations: [\n    BackButtonDirective,\n    InputDebounceDirective,\n    NotificationBarComponent,\n    ConfirmDialogComponent,\n    NewBookingDialogComponent,\n    PageHeaderComponent,\n    PageHeaderBackComponent,\n    PageHeaderTitleComponent,\n  ],\n  entryComponents: [\n    NotificationBarComponent,\n    ConfirmDialogComponent,\n  ],\n  providers: [\n    ...sharedInterceptorProviders,\n    UnsavedChangesGuard,\n  ],\n  exports: [\n    MaterialModule,\n    BackButtonDirective,\n    InputDebounceDirective,\n    PageHeaderComponent,\n    PageHeaderBackComponent,\n    PageHeaderTitleComponent,\n  ],\n})\n\nexport class SharedModule {\n}\n","import { createAction, props } from '@ngrx/store'\n\n\nexport const checkIsOnline = createAction('[Shared/isOnline] Check Is Online')\nexport const setIsOnline = createAction('[Shared/isOnline] Set Is Online', props<{ isOnline: boolean }>())\n\nexport const loadingOn = createAction('[Shared/Loading] API Loading...')\nexport const loadingOff = createAction('[Shared/Loading] API Loaded')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { map, mapTo, switchMap } from 'rxjs/operators'\nimport { fromEvent, merge, of } from 'rxjs'\nimport { checkIsOnline, setIsOnline } from './shared.actions'\nimport { NotificationBarService } from '../services/notification-bar.service'\nimport { MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar'\n\n\n@Injectable()\nexport class SharedEffects {\n\n  private ref: MatSnackBarRef<SimpleSnackBar> = null\n\n  constructor(private actions$: Actions, private notificationService: NotificationBarService) {\n  }\n\n  checkIsOnline$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(checkIsOnline.type),\n      switchMap(() => {\n        return merge(\n          of(navigator.onLine),\n          fromEvent(window, 'online').pipe(mapTo(true)),\n          fromEvent(window, 'offline').pipe(mapTo(false)),\n        )\n      }),\n      map(isOnline => {\n        this.showHideNotification(isOnline)\n        return {\n          isOnline,\n          type: setIsOnline.type,\n        }\n      }),\n    ),\n  )\n\n  private showHideNotification(isOnline: boolean): void {\n    if (!isOnline) {\n      this.ref = this.notificationService.showError('You are currently offline.', 999999)\n    } else if (this.ref) {\n      this.notificationService.dismiss(this.ref)\n    }\n  }\n}\n","import { createReducer, on } from '@ngrx/store'\nimport { initialSharedState } from './shared.state'\nimport { checkIsOnline, loadingOff, loadingOn, setIsOnline } from './shared.actions'\n\n\nexport const sharedReducer = createReducer(\n  initialSharedState,\n  on(checkIsOnline, (state) => ({...state, isOnline: false})),\n  on(setIsOnline, (state, {isOnline}) => ({...state, isOnline})),\n  on(loadingOn, (state) => ({...state, loading: true})),\n  on(loadingOff, (state) => ({...state, loading: false})),\n)\n","export interface SharedState {\n  isOnline: boolean\n  loading: boolean\n}\n\nexport const initialSharedState: SharedState = {\n  isOnline: false,\n  loading: false,\n}\n","// Default environment file\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:3000/api',\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n"],"sourceRoot":"webpack:///"}