{"version":3,"sources":["./src/app/features/todos/store/todos.selectors.ts","./src/app/features/todos/todos-routing.module.ts","./src/app/features/todos/todos.component.ts","./src/app/features/todos/todos.component.html","./src/app/features/todos/todos.module.ts"],"names":[],"mappings":"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","file":"features-todos-todos-module-es2015.js","sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { todosAdapter, TodosState } from './todos.state'\n\nconst { selectAll } = todosAdapter.getSelectors()\nconst selectTodosState = createFeatureSelector<TodosState>('todos')\n\nexport const selectTodos = createSelector(\n  selectTodosState,\n  selectAll,\n)\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { TodosComponent } from './todos.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodosComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodosRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { Observable } from 'rxjs'\nimport { TodosState } from './store/todos.state'\nimport { createTodosItem, deleteTodosItem, readTodos, updateTodosItem } from './store/todos.actions'\nimport { selectTodos } from './store/todos.selectors'\nimport { Todo } from './models/todo'\nimport { NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss'],\n})\nexport class TodosComponent implements OnInit {\n  public todos$: Observable<Todo[]>\n  public newTodoName: string\n\n  constructor(private store: Store<TodosState>) {\n    store.dispatch(readTodos())\n  }\n\n  ngOnInit(): void {\n    this.todos$ = this.store.pipe(select(selectTodos))\n  }\n\n  public onSubmit(form: NgForm): void {\n    this.store.dispatch(createTodosItem({todo: {name: this.newTodoName}}))\n    form.resetForm()\n  }\n\n  public onDelete(item: Todo): void {\n    this.store.dispatch(deleteTodosItem({todoId: item.id}))\n  }\n\n  public onChange(item: Todo, newDoneStatus: boolean): void {\n    this.store.dispatch(updateTodosItem({updateTodo: {id: item.id, changes: {...item, done: newDoneStatus}}}))\n  }\n}\n","<div *ngIf=\"todos$ | async as todos\">\n  <app-page-header>\n    <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n    <app-page-header-title [addons]=\"todos.length\">To-do list</app-page-header-title>\n    <button mat-icon-button color=\"primary\" aria-label=\"Reload\" class=\"ml-auto\">\n      <mat-icon>refresh</mat-icon>\n    </button>\n  </app-page-header>\n\n  <div class=\"page-content\">\n    <div class=\"squeeze\">\n      <mat-card class=\"mb-3\">\n        <form (ngSubmit)=\"onSubmit(todoForm)\" #todoForm=\"ngForm\" novalidate>\n          <mat-form-field class=\"w-100\">\n            <mat-label>To-do name</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"newTodoName\" #todoName=\"ngModel\" name=\"todoName\" required>\n            <mat-error *ngIf=\"todoName.hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"text-right\">\n            <button mat-button type=\"reset\">Reset</button>\n            <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"todoForm.invalid\">Submit</button>\n          </div>\n        </form>\n      </mat-card>\n\n      <mat-list>\n        <mat-list-item role=\"listitem\" *ngFor=\"let todo of todos\">\n          <mat-checkbox [checked]=\"todo.done\" (change)=\"onChange(todo, $event.checked)\">{{ todo.name }}</mat-checkbox>\n\n          <button mat-icon-button aria-label=\"Delete to-do item\" color=\"warn\" class=\"ml-auto\" (click)=\"onDelete(todo)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\nimport { SharedModule } from '../../shared/shared.module'\nimport { TodosRoutingModule } from './todos-routing.module'\n\nimport { TodosComponent } from './todos.component'\n\n\n@NgModule({\n  declarations: [\n    TodosComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    TodosRoutingModule,\n  ],\n})\nexport class TodosModule {\n}\n"],"sourceRoot":"webpack:///"}