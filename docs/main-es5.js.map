{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/app-store/app-store.effects.ts","webpack:///src/app/core/app-store/app-store.reducers.ts","webpack:///src/app/core/components/footer/footer.component.ts","webpack:///src/app/core/components/footer/footer.component.html","webpack:///src/app/core/components/header/header.component.ts","webpack:///src/app/core/components/header/header.component.html","webpack:///src/app/core/components/home/home.component.ts","webpack:///src/app/core/components/home/home.component.html","webpack:///src/app/core/components/notification-page/notification-page.component.ts","webpack:///src/app/core/components/notification-page/notification-page.component.html","webpack:///src/app/core/components/progress/progress.component.ts","webpack:///src/app/core/components/progress/progress.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/interceptors/action.interceptor.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/core/interceptors/message.interceptor.ts","webpack:///src/app/core/services/error-handler.service.ts","webpack:///src/app/core/services/error.service.ts","webpack:///src/app/core/services/logger.service.ts","webpack:///src/app/features/posts/services/posts-api.service.ts","webpack:///src/app/features/posts/store/posts.actions.ts","webpack:///src/app/features/posts/store/posts.effects.ts","webpack:///src/app/features/posts/store/posts.reducer.ts","webpack:///src/app/features/posts/store/posts.state.ts","webpack:///src/app/features/todos/services/todos-api.service.ts","webpack:///src/app/features/todos/store/todos.actions.ts","webpack:///src/app/features/todos/store/todos.effects.ts","webpack:///src/app/features/todos/store/todos.reducer.ts","webpack:///src/app/features/todos/store/todos.state.ts","webpack:///src/app/features/users/services/users-api.service.ts","webpack:///src/app/features/users/store/users.actions.ts","webpack:///src/app/features/users/store/users.effects.ts","webpack:///src/app/features/users/store/users.reducer.ts","webpack:///src/app/features/users/store/users.state.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/shared/components/new-booking-dialog/new-booking-dialog.component.ts","webpack:///src/app/shared/components/new-booking-dialog/new-booking-dialog.component.html","webpack:///src/app/shared/components/notification-bar/notification-bar.component.ts","webpack:///src/app/shared/components/notification-bar/notification-bar.component.html","webpack:///src/app/shared/components/page-header-back/page-header-back.component.ts","webpack:///src/app/shared/components/page-header-back/page-header-back.component.html","webpack:///src/app/shared/components/page-header-title/page-header-title.component.ts","webpack:///src/app/shared/components/page-header-title/page-header-title.component.html","webpack:///src/app/shared/components/page-header/page-header.component.ts","webpack:///src/app/shared/components/page-header/page-header.component.html","webpack:///src/app/shared/directives/back-button.directive.ts","webpack:///src/app/shared/directives/input-debounce.directive.ts","webpack:///src/app/shared/interceptors/index.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/models/snackbar.model.ts","webpack:///src/app/shared/services/notification-bar.service.ts","webpack:///src/app/shared/services/router-history.service.ts","webpack:///src/app/shared/services/unsaved-changes.guard.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/store/shared.actions.ts","webpack:///src/app/shared/store/shared.effects.ts","webpack:///src/app/shared/store/shared.reducer.ts","webpack:///src/app/shared/store/shared.state.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","loadChildren","m","PostsModule","TodosModule","UsersModule","ExamplesModule","data","type","title","heading","description","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","store","router","routerHistory","dispatch","events","pipe","evt","subscribe","push","url","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","appEffects","appReducers","shared","posts","todos","users","FooterComponent","HeaderComponent","sidenavIconClick","HomeComponent","NotificationPageComponent","activatedRoute","textCssClass","icon","ProgressComponent","ngProgress","progressRef","ref","started","completed","destroy","CoreModule","provide","useClass","instrument","maxAge","logOnly","production","withConfig","spinner","ActionInterceptor","next","handle","event","responseStatusCode","status","statusCodeHandler","error","errorStatusCode","navigate","httpInterceptorProviders","multi","MessageInterceptor","errorService","notificationService","responseData","body","message","includes","showSuccess","errorMsg","getServerMessage","showError","ErrorHandlerService","loggerService","logError","ErrorService","toString","statusText","providedIn","LoggerService","http","errMessage","createErrMessage","post","baseUrl","date","Date","toISOString","TypeError","POSTS_API_ENDPOINT","PostsApiService","get","changes","put","createPostsItem","createPostsItemSuccess","createPostsItemFail","readPosts","readPostsSuccess","readPostsFail","readPostsItem","readPostsItemSuccess","readPostsItemFail","updatePostsItem","updatePostsItemSuccess","updatePostsItemFail","deletePostsItem","deletePostsItemSuccess","deletePostsItemFail","PostsEffects","postsService","actions$","createPost$","createItem","response","readPosts$","readItems","readPost$","readItem","updatePost$","updatePost","updateItem","deletePost$","deleteItem","navigate$","user","reducer","state","addOne","setAll","upsertOne","updateOne","removeOne","postsReducer","action","postsAdapter","selectId","item","sortComparer","initialPostsState","getInitialState","TODOS_API_ENDPOINT","TodosApiService","todo","createTodosItem","createTodosItemSuccess","createTodosItemFail","readTodos","readTodosSuccess","readTodosFail","updateTodosItem","updateTodosItemSuccess","updateTodosItemFail","deleteTodosItem","deleteTodosItemSuccess","deleteTodosItemFail","TodosEffects","actions","todosService","createTodosItem$","readTodosItems$","updateTodosItem$","updateTodo","deleteTodosItem$","todoId","todosReducer","todosAdapter","initialTodosState","USERS_API_ENDPOINT","UsersApiService","collectionParams","params","filter","set","sortDirection","sortField","pageIndex","pageSize","readUsers","readUsersSuccess","readUsersFail","UsersEffects","usersApiService","readUsersItems$","totalCount","length","usersReducer","usersAdapter","initialUsersState","ConfirmDialogComponent","dialogRef","BookingLine","NewBookingDialogComponent","displayedColumns","dataSourceForTable","setDisplayedColumns","element","alert","NotificationBarComponent","snackBar","PageHeaderBackComponent","navigateByUrl","getLatestFrom","link","onBackClick","ariaLabel","PageHeaderTitleComponent","addons","PageHeaderComponent","BackButtonDirective","location","back","onClick","InputDebounceDirective","elementRef","delayedInput","nativeElement","value","input","sharedInterceptorProviders","MaterialModule","defaultSnackBarConfig","duration","panelClass","successSnackBarConfig","announcementMessage","verticalPosition","errorSnackBarConfig","NotificationBarService","zone","show","defaultConfig","snackBarConfig","run","openFromComponent","text","snackBarRef","dismiss","RouterHistoryService","urls","unshift","patternUrl","find","indexOf","UnsavedChangesGuard","dialog","canDeactivate","open","btnCancel","btnOk","afterClosed","SharedModule","entryComponents","checkIsOnline","setIsOnline","loadingOn","loadingOff","SharedEffects","checkIsOnline$","navigator","onLine","window","isOnline","showHideNotification","sharedReducer","loading","initialSharedState","environment","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core'\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router'\n\nimport { HomeComponent } from './core/components/home/home.component'\nimport { NotificationPageComponent, NotificationPageData } from './core/components/notification-page/notification-page.component'\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'posts',\n    loadChildren: () => import('./features/posts/posts.module').then(m => m.PostsModule),\n  },\n  {\n    path: 'todos',\n    loadChildren: () => import('./features/todos/todos.module').then(m => m.TodosModule),\n  },\n  {\n    path: 'users',\n    loadChildren: () => import('./features/users/users.module').then(m => m.UsersModule),\n  },\n  {\n    path: 'examples',\n    loadChildren: () => import('./features/examples/examples.module').then(m => m.ExamplesModule),\n  },\n  {\n    path: '**',\n    component: NotificationPageComponent,\n    data: ({\n      type: 'error',\n      title: 'Page not found',\n      heading: '404',\n      description: 'This is not the page you are looking for.',\n    } as NotificationPageData),\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    preloadingStrategy: PreloadAllModules,\n  })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core'\nimport { NavigationEnd, Router } from '@angular/router'\nimport { filter } from 'rxjs/operators'\nimport { Store } from '@ngrx/store'\nimport { SharedState } from './shared/store/shared.state'\nimport { checkIsOnline } from './shared/store/shared.actions'\nimport { RouterHistoryService } from './shared/services/router-history.service'\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private store: Store<SharedState>, private router: Router, private routerHistory: RouterHistoryService) {\n    this.store.dispatch(checkIsOnline())\n  }\n\n  ngOnInit(): void {\n    this.router.events.pipe(filter(evt => evt instanceof NavigationEnd)).subscribe((evt: NavigationEnd) => this.routerHistory.push(evt.url))\n  }\n}\n","<app-progress></app-progress>\n\n<mat-sidenav-container class=\"app-wrapper\">\n  <mat-sidenav mode=\"side\" #sidenav class=\"app-sidebar\">\n\n    <mat-nav-list>\n      <mat-list-item routerLink=\"/\">\n        <mat-icon>home</mat-icon><span>Home</span>\n      </mat-list-item>\n      <mat-expansion-panel [class.mat-elevation-z0]=\"true\">\n        <mat-expansion-panel-header>\n          My Lentune\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a mat-list-item routerLink=\"/posts\">\n            <span>Dashboard</span>\n          </a>\n          <a mat-list-item routerLink=\"/users\">\n            <span>Bookings</span>\n          </a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n      <mat-expansion-panel [class.mat-elevation-z0]=\"true\">\n        <mat-expansion-panel-header>\n          Administration\n        </mat-expansion-panel-header>\n        <mat-nav-list>\n          <a mat-list-item routerLink=\"/posts\">Settings</a>\n          <a mat-list-item routerLink=\"/todos\">Profile</a>\n          <a mat-list-item routerLink=\"/examples\">Preferences</a>\n        </mat-nav-list>\n      </mat-expansion-panel>\n    </mat-nav-list>\n\n  </mat-sidenav>\n  <mat-sidenav-content class=\"app-content\">\n    <app-header (sidenavIconClick)=\"sidenav.toggle()\"></app-header>\n\n    <main class=\"app-content__main\">\n      <router-outlet></router-outlet>\n    </main>\n\n    <app-footer></app-footer>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { NgModule } from '@angular/core'\nimport { BrowserModule } from '@angular/platform-browser'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { AppRoutingModule } from './app-routing.module'\nimport { CoreModule } from './core/core.module'\nimport { SharedModule } from './shared/shared.module'\n\nimport { AppComponent } from './app.component'\nimport { HomeComponent } from './core/components/home/home.component'\nimport { HeaderComponent } from './core/components/header/header.component'\nimport { FooterComponent } from './core/components/footer/footer.component'\nimport { NotificationPageComponent } from './core/components/notification-page/notification-page.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    NotificationPageComponent, // TODO: After creating PageHeaderComponent move it to declarations of CoreModule\n  ],\n  imports: [\n    // angular\n    BrowserModule,\n\n    // material design\n    BrowserAnimationsModule,\n\n    // core & shared\n    CoreModule,\n    SharedModule,\n\n    // app routing\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\n\nexport class AppModule {\n}\n","import { Type } from '@angular/core'\nimport { PostsEffects } from '../../features/posts/store/posts.effects'\nimport { SharedEffects } from '../../shared/store/shared.effects'\nimport { TodosEffects } from '../../features/todos/store/todos.effects'\nimport { UsersEffects } from '../../features/users/store/users.effects'\n\n\nexport const appEffects: Type<any>[] = [\n  SharedEffects,\n  PostsEffects,\n  TodosEffects,\n  UsersEffects,\n]\n","import { ActionReducerMap } from '@ngrx/store'\nimport { AppState } from './app-store.state'\nimport { postsReducer } from '../../features/posts/store/posts.reducer'\nimport { sharedReducer } from '../../shared/store/shared.reducer'\nimport { todosReducer } from '../../features/todos/store/todos.reducer'\nimport { usersReducer } from '../../features/users/store/users.reducer'\n\n\nexport const appReducers: ActionReducerMap<AppState> = {\n  shared: sharedReducer,\n  posts: postsReducer,\n  todos: todosReducer,\n  users: usersReducer,\n}\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent {\n}\n","<footer class=\"footer\">\n  <small>2020 &copy; Angular Starter App licensed under MIT for better web</small>\n</footer>\n","import { Component, EventEmitter, Output } from '@angular/core'\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent {\n  @Output() sidenavIconClick = new EventEmitter()\n}\n","<mat-toolbar class=\"app-toolbar\" color=\"primary\">\n  <button mat-icon-button aria-label=\"Toggle app menu\" class=\"app-toolbar__btn-menu\" (click)=\"sidenavIconClick.emit()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <img src=\"assets/logo-white.svg\" class=\"app-toolbar__logo\" alt=\"\"> Lentune Wedding Hire\n\n  <div class=\"app-toolbar__right\">\n    <button mat-icon-button aria-label=\"Toggle user menu\" [matMenuTriggerFor]=\"menu\">\n      <mat-icon>person</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>Sign out</button>\n    </mat-menu>\n  </div>\n</mat-toolbar>","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n}\n","<div class=\"hero\">\n    <h1>Welcome to Wedding Essentials Hire</h1>\n    <p>Your one-stop shop for all your wedding needs.</p>\n</div>\n\n<div class=\"section\">\n    <h2>About Us</h2>\n    <p>We specialize in providing high-quality wedding hire services to make your special day unforgettable. From\n        elegant decorations to essential equipment, we have everything you need.</p>\n</div>\n\n<div class=\"section\">\n    <h2>Our Services</h2>\n    <p>Explore our wide range of wedding hire services designed to cater to every aspect of your wedding day.</p>\n    <!-- Add more content here such as a list of services or images -->\n</div>\n\n<div class=\"section\">\n    <h2>Testimonials</h2>\n    <p>Don't just take our word for it. Read what our satisfied clients have to say about our services.</p>\n    <!-- Insert testimonials here -->\n</div>\n\n<footer>\n    <p>Contact Us: info@weddingessentialshire.com</p>\n    <p>Follow us on Social Media</p>\n    <!-- Add links to social media profiles -->\n</footer>","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\n\n@Component({\n  selector: 'app-notification-page',\n  templateUrl: './notification-page.component.html',\n  styleUrls: ['./notification-page.component.scss'],\n})\nexport class NotificationPageComponent implements OnInit {\n\n  public data: NotificationPageData\n  public textCssClass: 'text-success' | 'text-danger' | 'text-primary'\n\n  constructor(private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe((data: NotificationPageData) => {\n      this.data = data\n\n      switch (data.type) {\n        case 'error': this.textCssClass = 'text-danger'; break\n        case 'success': this.textCssClass = 'text-success'; break\n        case 'info': this.textCssClass = 'text-primary'; break\n      }\n\n      if (!data.icon) {\n        switch (data.type) {\n          case 'error': data.icon = 'clear'; break\n          case 'success': data.icon = 'done'; break\n          case 'info': data.icon = 'info'; break\n        }\n      }\n    })\n  }\n}\n\nexport interface NotificationPageData {\n  type: 'error' | 'success' | 'info',\n  title: string,\n  heading: string,\n  description?: string,\n  icon?: string,\n}\n","<app-page-header>\n  <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n  <app-page-header-title>{{ data.title }}</app-page-header-title>\n</app-page-header>\n\n<div class=\"page-content notification-page__content\">\n  <mat-icon class=\"notification-page__icon\" [ngClass]=\"textCssClass\">{{ data.icon }}</mat-icon>\n  <h2 class=\"mat-display-2 notification-page__heading\">{{ data.heading }}</h2>\n  <p>{{ data.description }}</p>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core'\nimport { Store } from '@ngrx/store'\nimport { NgProgress, NgProgressRef } from 'ngx-progressbar'\nimport { loadingOff, loadingOn } from '../../../shared/store/shared.actions'\nimport { SharedState } from '../../../shared/store/shared.state'\n\n\n@Component({\n  selector: 'app-progress',\n  templateUrl: './progress.component.html',\n})\nexport class ProgressComponent implements OnInit, OnDestroy {\n\n  progressRef: NgProgressRef\n\n  constructor(private store: Store<SharedState>, private ngProgress: NgProgress) {\n  }\n\n  ngOnInit(): void {\n    this.progressRef = this.ngProgress.ref()\n    this.progressRef.started.subscribe(() => this.store.dispatch(loadingOn()))\n    this.progressRef.completed.subscribe(() => this.store.dispatch(loadingOff()))\n  }\n\n  ngOnDestroy() {\n    this.progressRef.destroy()\n  }\n}\n","<ng-progress></ng-progress>\n","import { ErrorHandler, NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { HttpClientModule } from '@angular/common/http'\nimport { environment } from '../../environments/environment'\n\nimport { StoreModule } from '@ngrx/store'\nimport { EffectsModule } from '@ngrx/effects'\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools'\nimport { appReducers } from './app-store/app-store.reducers'\nimport { appEffects } from './app-store/app-store.effects'\n\nimport { ErrorHandlerService } from './services/error-handler.service'\nimport { httpInterceptorProviders } from './interceptors'\nimport { ProgressComponent } from './components/progress/progress.component'\nimport { NgProgressModule } from 'ngx-progressbar'\nimport { NgProgressHttpModule } from 'ngx-progressbar/http'\n\n\n@NgModule({\n  declarations: [\n    ProgressComponent,\n  ],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n\n    //  ngrx\n    StoreModule.forRoot(appReducers),\n    EffectsModule.forRoot(appEffects),\n    StoreDevtoolsModule.instrument({maxAge: 25, logOnly: environment.production}),\n\n    // ngProgess\n    NgProgressModule.withConfig({spinner: false}),\n    NgProgressHttpModule,\n  ],\n  providers: [\n    ...httpInterceptorProviders,\n    {provide: ErrorHandler, useClass: ErrorHandlerService},\n  ],\n  exports: [\n    ProgressComponent,\n  ],\n})\n\nexport class CoreModule {\n}\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Router } from '@angular/router'\nimport { Observable, throwError } from 'rxjs'\nimport { catchError, tap } from 'rxjs/operators'\n\n\n@Injectable()\nexport class ActionInterceptor implements HttpInterceptor {\n\n  constructor(private router: Router) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const responseStatusCode: number = event.status\n          this.statusCodeHandler(responseStatusCode)\n        }\n      }),\n      catchError((error: Error | HttpErrorResponse): Observable<any> => {\n        if (error instanceof HttpErrorResponse) {\n          const errorStatusCode: number = error.status\n          this.statusCodeHandler(errorStatusCode)\n        }\n        return throwError(error)\n      }),\n    )\n  }\n\n  private statusCodeHandler(code: number) {\n    switch (code) {\n      case 401:\n        this.router.navigate(['/login'])\n        break\n    }\n  }\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { MessageInterceptor } from './message.interceptor'\nimport { ActionInterceptor } from './action.interceptor'\n\nexport const httpInterceptorProviders = [\n  {provide: HTTP_INTERCEPTORS, useClass: MessageInterceptor, multi: true},\n  {provide: HTTP_INTERCEPTORS, useClass: ActionInterceptor, multi: true},\n]\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http'\nimport { Observable, throwError } from 'rxjs'\nimport { ErrorService } from '../services/error.service'\nimport { NotificationBarService } from '../../shared/services/notification-bar.service'\nimport { catchError, tap } from 'rxjs/operators'\nimport { HttpResponseModel } from '../../shared/models/http-response-model.model'\n\n\n@Injectable()\nexport class MessageInterceptor implements HttpInterceptor {\n\n  constructor(private errorService: ErrorService, private notificationService: NotificationBarService) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      tap((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          const responseData: HttpResponseModel<any> = event.body\n          if (responseData && responseData.message && !event.url.includes('/err-logs')) {\n            this.notificationService.showSuccess(responseData.message)\n          }\n        }\n      }),\n      catchError((error: Error | HttpErrorResponse): Observable<any> => {\n        if (error instanceof HttpErrorResponse) {\n          const errorMsg = this.errorService.getServerMessage(error)\n          this.notificationService.showError(errorMsg)\n        }\n        return throwError(error)\n      }),\n    )\n  }\n}\n","import { ErrorHandler, Injectable } from '@angular/core'\nimport { LoggerService } from './logger.service'\nimport { environment } from '../../../environments/environment'\n\n@Injectable()\nexport class ErrorHandlerService extends ErrorHandler {\n  constructor(private loggerService: LoggerService) {\n    super()\n  }\n\n  public handleError(error: any) {\n    if (environment.production) {\n      this.loggerService.logError(error)\n    }\n\n    super.handleError(error)\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpErrorResponse } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ErrorService {\n\n  public getClientMessage(error: Error): string {\n    return error.message || error.toString()\n  }\n\n  public getServerMessage(error: HttpErrorResponse): string {\n    return (error.error && error.error.message) || error.statusText\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { ErrMessage } from '../models/err-message.model'\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http'\nimport { environment } from '../../../environments/environment'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public logError(error: any) {\n    const errMessage: ErrMessage = this.createErrMessage(error)\n    this.http.post(`${environment.baseUrl}/err-logs`, errMessage).subscribe()\n  }\n\n  private createErrMessage(error: any): ErrMessage {\n    const date = new Date().toISOString()\n    if (error instanceof HttpErrorResponse) {\n      return {\n        date,\n        type: 'HTTP ERR',\n        message: error.message,\n        status: error.status,\n      }\n    } else if (error instanceof TypeError) {\n      return {\n        date,\n        type: 'TYPE ERR',\n        message: error.message,\n      }\n    } else if (error instanceof Error) {\n      return {\n        date,\n        type: 'GENERAL ERR',\n        message: error.message,\n      }\n    } else {\n      return {\n        date,\n        type: 'UNKNOWN ERR',\n        message: error.message,\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { Post } from '../models/post.model'\nimport { Observable } from 'rxjs'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\n\nconst POSTS_API_ENDPOINT = '/posts'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostsApiService implements ApiServiceModel<Post> {\n  constructor(private http: HttpClient) {\n  }\n\n  public createItem(post: Post): Observable<object> {\n    return this.http.post(`${environment.baseUrl}${POSTS_API_ENDPOINT}`, post)\n  }\n\n  public readItems(): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${POSTS_API_ENDPOINT}`)\n  }\n\n  public readItem(id: string): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`)\n  }\n\n  public updateItem(id: string, changes: Partial<Post>): Observable<object> {\n    return this.http.put(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`, changes)\n  }\n\n  public deleteItem(id: string): Observable<object> {\n    return this.http.delete(`${environment.baseUrl}${POSTS_API_ENDPOINT}/${id}`)\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { Post } from '../models/post.model'\nimport { Update } from '@ngrx/entity'\n\n// CRUD\n\n// Create Post\nexport const createPostsItem = createAction('[Posts] Create Post', props<{ post: Partial<Post> }>())\nexport const createPostsItemSuccess = createAction('[Posts] Create Create Success', props<{ post: Post }>())\nexport const createPostsItemFail = createAction('[Posts] Create Create Fail')\n\n// Read Posts\nexport const readPosts = createAction('[Posts] Read Posts')\nexport const readPostsSuccess = createAction('[Posts] Read Posts Success', props<{ posts: Post[] }>())\nexport const readPostsFail = createAction('[Posts] Read Posts Fail')\n\n// Read Post\nexport const readPostsItem = createAction('[Posts] Read Post', props<{ id: string }>())\nexport const readPostsItemSuccess = createAction('[Posts] Read Post Success', props<{ post: Post }>())\nexport const readPostsItemFail = createAction('[Posts] Read Post Fail')\n\n// Update Post\nexport const updatePostsItem = createAction('[Posts] Update Post', props<{ updatePost: Update<Post> }>())\nexport const updatePostsItemSuccess = createAction('[Posts] Update Post Success')\nexport const updatePostsItemFail = createAction('[Posts] Update Post Fail')\n\n// Delete Post\nexport const deletePostsItem = createAction('[Posts] Delete Post', props<{ id: string }>())\nexport const deletePostsItemSuccess = createAction('[Posts] Delete Post Success')\nexport const deletePostsItemFail = createAction('[Posts] Delete Post Fail')\n","import { Injectable } from '@angular/core'\nimport { PostsApiService } from '../services/posts-api.service'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport {\n  createPostsItem,\n  createPostsItemFail,\n  createPostsItemSuccess,\n  deletePostsItem,\n  deletePostsItemFail,\n  deletePostsItemSuccess,\n  readPostsItem,\n  readPostsItemFail,\n  readPosts,\n  readPostsFail,\n  readPostsSuccess,\n  readPostsItemSuccess,\n  updatePostsItem,\n  updatePostsItemFail,\n  updatePostsItemSuccess,\n} from './posts.actions'\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators'\nimport { HttpResponseModel } from '../../../shared/models/http-response-model.model'\nimport { Post } from '../models/post.model'\nimport { of } from 'rxjs'\nimport { Router } from '@angular/router'\n\n@Injectable()\nexport class PostsEffects {\n\n  constructor(private postsService: PostsApiService, private actions$: Actions, private router: Router) {\n  }\n\n  // CRUD\n\n  createPost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createPostsItem.type),\n      mergeMap(({post}) => this.postsService.createItem(post).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: createPostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: createPostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  readPosts$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(readPosts.type),\n      mergeMap(() => this.postsService.readItems().pipe(\n        map((response: HttpResponseModel<Post[]>) => ({\n          type: readPostsSuccess.type,\n          posts: response,\n        })),\n        catchError(() => of({\n          type: readPostsFail.type,\n        })),\n      )),\n    ),\n  )\n\n  readPost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(readPostsItem.type),\n      mergeMap(({id}) => this.postsService.readItem(id).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: readPostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: readPostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  updatePost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updatePostsItem.type),\n      mergeMap((({updatePost}: {updatePost: {id: string, changes: Post}}) =>\n        this.postsService.updateItem(updatePost.id, updatePost.changes).pipe(\n          map((response: HttpResponseModel<Post>) => ({\n            type: updatePostsItemSuccess.type,\n            post: response,\n          })),\n          catchError(() => of({\n            type: updatePostsItemFail.type,\n          })),\n        )),\n      ),\n    ),\n  )\n\n  deletePost$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deletePostsItem.type),\n      mergeMap(({id}) => this.postsService.deleteItem(id).pipe(\n        map((response: HttpResponseModel<Post>) => ({\n          type: deletePostsItemSuccess.type,\n          post: response,\n        })),\n        catchError(() => of({\n          type: deletePostsItemFail.type,\n        })),\n      )),\n    ),\n  )\n\n  navigate$ = createEffect(() =>\n      this.actions$.pipe(\n        ofType(createPostsItemSuccess.type, updatePostsItemSuccess.type, deletePostsItemSuccess.type),\n        tap(({user}) => this.router.navigate(['/', 'posts'])),\n      ),\n    {dispatch: false},\n  )\n}\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialPostsState, postsAdapter, PostsState } from './posts.state'\nimport { createPostsItemSuccess, deletePostsItem, readPostsSuccess, readPostsItemSuccess, updatePostsItem } from './posts.actions'\n\n\nconst reducer = createReducer(\n  initialPostsState,\n  on(createPostsItemSuccess, (state, { post }) => postsAdapter.addOne(post, state)),\n  on(readPostsSuccess, (state, { posts }) => postsAdapter.setAll(posts, state)),\n  on(readPostsItemSuccess, (state, { post }) => postsAdapter.upsertOne(post, state)),\n  on(updatePostsItem, (state, { updatePost}) => postsAdapter.updateOne(updatePost, state)),\n  on(deletePostsItem, (state, { id }) => postsAdapter.removeOne(id, state)),\n)\n\nexport function postsReducer(state: PostsState, action: Action) {\n  return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { Post } from '../models/post.model'\n\nexport interface PostsState extends EntityState<Post> {\n}\n\nexport const postsAdapter: EntityAdapter<Post> = createEntityAdapter<Post>({\n  selectId: (item: Post) => item.id,\n  sortComparer: false,\n})\n\nexport const initialPostsState: PostsState = postsAdapter.getInitialState({\n})\n","import { Injectable } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { Todo } from '../models/todo'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\nimport { Observable } from 'rxjs'\n\nconst TODOS_API_ENDPOINT = '/todos'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodosApiService implements ApiServiceModel<Todo> {\n  constructor(private http: HttpClient) {\n  }\n\n  public createItem(todo: Todo): Observable<object> {\n    return this.http.post(`${environment.baseUrl}${TODOS_API_ENDPOINT}`, todo)\n  }\n\n  public readItems(): Observable<object> {\n    return this.http.get(`${environment.baseUrl}${TODOS_API_ENDPOINT}`)\n  }\n\n  public updateItem(id: string, changes: Partial<Todo>): Observable<object> {\n    return this.http.put(`${environment.baseUrl}${TODOS_API_ENDPOINT}/${id}`, changes)\n  }\n\n  public deleteItem(id: string): Observable<object> {\n    return this.http.delete(`${environment.baseUrl}${TODOS_API_ENDPOINT}/${id}`)\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { Update } from '@ngrx/entity'\nimport { Todo } from '../models/todo'\n\nexport const createTodosItem = createAction('[Todos/API] Add Item', props<{ todo: Partial<Todo> }>())\nexport const createTodosItemSuccess = createAction('[Todos/API] Add Item Success', props<{ todo: Todo }>())\nexport const createTodosItemFail = createAction('[Todos/API] Add Item FAIL')\n\nexport const readTodos = createAction('[Todos/API] Fetch All')\nexport const readTodosSuccess = createAction('[Todos/API] Fetch All Success', props<{ todos: Todo[] }>())\nexport const readTodosFail = createAction('[Todos/API] Fetch All FAIL')\n\nexport const updateTodosItem = createAction('[Todos/API] Update Item', props<{ updateTodo: Update<Todo> }>())\nexport const updateTodosItemSuccess = createAction('[Todos/API] Update Item Success')\nexport const updateTodosItemFail = createAction('[Todos/API] Update Item FAIL')\n\nexport const deleteTodosItem = createAction('[Todos/API] Delete Item', props<{ todoId: string }>())\nexport const deleteTodosItemSuccess = createAction('[Todos/API] Delete Item Success')\nexport const deleteTodosItemFail = createAction('[Todos/API] Delete Item FAIL')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { TodosApiService } from '../services/todos-api.service'\nimport {\n  createTodosItem, createTodosItemFail, createTodosItemSuccess, deleteTodosItem, deleteTodosItemFail, deleteTodosItemSuccess,\n  readTodos,\n  readTodosFail,\n  readTodosSuccess,\n  updateTodosItem,\n  updateTodosItemFail,\n  updateTodosItemSuccess,\n} from './todos.actions'\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { Todo } from '../models/todo'\n\n@Injectable()\nexport class TodosEffects {\n  constructor(private readonly actions: Actions, private todosService: TodosApiService) {\n  }\n\n  createTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(createTodosItem.type),\n      mergeMap(({todo}: {todo: Todo}) =>\n        this.todosService.createItem(todo).pipe(\n          map((response: Todo) => ({\n            type: createTodosItemSuccess.type,\n            todo: response,\n          })),\n          catchError(() => of({type: createTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n\n  readTodosItems$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(readTodos.type),\n      switchMap(() => this.todosService.readItems().pipe(\n        map((response: Todo[]) => ({\n          type: readTodosSuccess.type,\n          todos: response,\n        })),\n        catchError(() => of({type: readTodosFail.type})),\n      )),\n    ),\n  )\n\n  updateTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(updateTodosItem.type),\n      mergeMap(({updateTodo}: {updateTodo: {id: string, changes: Todo}}) =>\n        this.todosService.updateItem(updateTodo.id, updateTodo.changes).pipe(\n          map(() => ({type: updateTodosItemSuccess.type})),\n          catchError(() => of({type: updateTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n\n  deleteTodosItem$ = createEffect(() =>\n    this.actions.pipe(\n      ofType(deleteTodosItem.type),\n      mergeMap(({todoId}: {todoId: string}) =>\n        this.todosService.deleteItem(todoId).pipe(\n          map(() => ({type: deleteTodosItemSuccess.type})),\n          catchError(() => of({type: deleteTodosItemFail.type})),\n        ),\n      ),\n    ),\n  )\n}\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialTodosState, todosAdapter, TodosState } from './todos.state'\nimport { createTodosItemSuccess, deleteTodosItem, readTodosSuccess, updateTodosItem } from './todos.actions'\n\nconst reducer = createReducer(\n  initialTodosState,\n  on(createTodosItemSuccess, (state, { todo }) => todosAdapter.addOne(todo, state)),\n  on(readTodosSuccess, (state, { todos }) => todosAdapter.setAll(todos, state)),\n  on(updateTodosItem, (state, { updateTodo }) => todosAdapter.updateOne(updateTodo, state)),\n  on(deleteTodosItem, (state, { todoId }) => todosAdapter.removeOne(todoId, state)),\n)\n\nexport function todosReducer(state: TodosState, action: Action) {\n  return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { Todo } from '../models/todo'\n\nexport interface TodosState extends EntityState<Todo> {\n}\n\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>({\n  selectId: (item: Todo) => item.id,\n  sortComparer: false,\n})\n\nexport const initialTodosState: TodosState = todosAdapter.getInitialState({\n})\n","import { Injectable } from '@angular/core'\nimport { ApiServiceModel } from '../../../shared/models/api-service.model'\nimport { User } from '../models/user.model'\nimport { Observable } from 'rxjs'\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { environment } from '../../../../environments/environment'\nimport { CollectionParams } from '../../../shared/models/collection-params.model'\n\nconst USERS_API_ENDPOINT = '/users'\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersApiService implements ApiServiceModel<User> {\n\n  constructor(private http: HttpClient) {\n  }\n\n  public readItems(collectionParams: CollectionParams): Observable<object> {\n    let params = new HttpParams()\n\n    if (collectionParams?.filter !== '') {\n      params = params.set('filter', collectionParams?.filter)\n    }\n    params = params.set('sortDirection', collectionParams?.sortDirection)\n    params = params.set('sortField', collectionParams?.sortField)\n    params = params.set('pageIndex', collectionParams?.pageIndex?.toString())\n    params = params.set('pageSize', collectionParams?.pageSize?.toString())\n\n    return this.http.get(`/assets/${USERS_API_ENDPOINT}`, { params })\n  }\n}\n","import { createAction, props } from '@ngrx/store'\nimport { User } from '../models/user.model'\nimport { CollectionParams } from '../../../shared/models/collection-params.model'\n\nexport const readUsers = createAction('[Users/API] Fetch All Users', props<{ collectionParams: CollectionParams }>())\nexport const readUsersSuccess = createAction('[Users/API] Fetch All Users Success', props<{ users: User[], totalCount: number }>())\nexport const readUsersFail = createAction('[Users/API] Fetch All Users Fail')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { catchError, map, switchMap, tap } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { UsersApiService } from '../services/users-api.service'\nimport { readUsers, readUsersFail, readUsersSuccess } from './users.actions'\nimport { User } from '../models/user.model'\n\n@Injectable()\nexport class UsersEffects {\n    constructor(private readonly actions: Actions, private usersApiService: UsersApiService) {\n    }\n\n    readUsersItems$ = createEffect(() =>\n        this.actions.pipe(\n            ofType(readUsers.type),\n            switchMap(({ collectionParams }) => this.usersApiService.readItems(collectionParams).pipe(\n                map((response: User[]) => ({\n                    type: readUsersSuccess.type,\n                    users: response,\n                    totalCount: response.length,\n                })),\n                catchError(() => of({ type: readUsersFail.type })),\n            )),\n        ),\n    )\n}\n\n","import { Action, createReducer, on } from '@ngrx/store'\nimport { initialUsersState, usersAdapter, UsersState } from './users.state'\nimport { readUsersSuccess } from './users.actions'\n\nconst reducer = createReducer(\n    initialUsersState,\n    on(readUsersSuccess, (state, { users , totalCount}) => {\n      return usersAdapter.setAll(users, {...state, totalCount})\n    }),\n)\n\nexport function usersReducer(state: UsersState, action: Action) {\n    return reducer(state, action)\n}\n","import { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity'\nimport { User } from '../models/user.model'\n\nexport interface UsersState extends EntityState<User> {\n  totalCount: number\n}\n\nexport const usersAdapter: EntityAdapter<User> = createEntityAdapter<User>({\n    selectId: (item: User) => item.id,\n    sortComparer: false,\n})\n\nexport const initialUsersState: UsersState = usersAdapter.getInitialState({\n  totalCount: 0,\n})\n","import { Component, Inject } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { DialogDataModel } from '../../models/dialog-data.model'\n\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogDataModel) {\n  }\n}\n","<h1 mat-dialog-title>{{ data.title || 'Confirm' }}</h1>\n<div mat-dialog-content>\n  <p>{{ data.message }}</p>\n</div>\n<div mat-dialog-actions class=\"confirm-dialog__actions\">\n  <button mat-flat-button [mat-dialog-close]=\"false\">\n    {{ data.btnCancel || 'Cancel' }}\n  </button>\n  <button mat-flat-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">\n    {{ data.btnOk || 'OK' }}\n  </button>\n</div>","import { Component, Inject, OnInit } from '@angular/core'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog'\nimport { DialogDataModel } from '../../models/dialog-data.model'\nimport { MatTableDataSource } from '@angular/material/table'\n\nclass BookingLine {\n  Code: string\n  Description: string\n  Branch: string\n  Quantity: number\n  StartDate: Date\n  EndDate: Date\n}\n\n@Component({\n  selector: 'app-new-booking-dialog',\n  templateUrl: './new-booking-dialog.component.html',\n  styleUrls: ['./new-booking-dialog.component.scss'],\n})\nexport class NewBookingDialogComponent implements OnInit {\n\n  displayedColumns: string[] = []\n\n  public dataSourceForTable: MatTableDataSource<BookingLine>\n\n  constructor(public dialogRef: MatDialogRef<NewBookingDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogDataModel) {\n  }\n\n  ngOnInit(): void {\n    this.dataSourceForTable = new MatTableDataSource([]);\n\n    this.setDisplayedColumns()\n  }\n\n  private setDisplayedColumns(): void {\n    this.displayedColumns = ['Code', 'Description', 'Branch', 'Quantity', 'StartDate', 'EndDate', 'Actions']\n  }\n\n  onDelete(element) {\n    alert('delete not implemented yet');\n  }\n}\n","<div class=\"dialog-header\">\n  <h1 mat-dialog-title>{{ data.title || 'Confirm' }}</h1>\n\n  <div class=\"fill\"></div>\n\n  <div>\n\n    <button mat-stroked-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">\n      {{ data.btnOk || 'Save' }}\n    </button>\n\n    <button mat-stroked-button [mat-dialog-close]=\"false\">\n      {{ data.btnCancel || 'Cancel' }}\n    </button>\n\n  </div>\n</div>\n\n<div class=\"dialog-header-bottom-border\"></div>\n\n<div mat-dialog-content>\n\n  <div class=\"flex-container\">\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Project</mat-label>\n      <input matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Delivery address</mat-label>\n      <textarea matInput rows=\"4\"></textarea>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n      <mat-label>Booking notes</mat-label>\n      <textarea matInput rows=\"4\"></textarea>\n    </mat-form-field>\n\n  </div>\n\n  <div class=\"booking-line-table-container\">\n    <table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForTable\" matSortDisableClear>\n\n      <ng-container matColumnDef=\"Code\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.Code}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n        <td mat-cell *matCellDef=\"let element\"> {{ element.firstName }} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Branch\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.lastName}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Quantity\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"StartDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>StartDate</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"EndDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>EndDate</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"Actions\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button mat-icon-button (click)=\"onDelete(element)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n\n  <div class=\"search-box flex-container\">\n\n    <div class=\"fill\">\n      <table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForTable\" matSortDisableClear>\n\n        <ng-container matColumnDef=\"Code\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n          <td mat-cell *matCellDef=\"let element\">{{element.Code}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Description\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n          <td mat-cell *matCellDef=\"let element\"> {{ element.firstName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Branch\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Branch</th>\n          <td mat-cell *matCellDef=\"let element\">{{element.lastName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Quantity\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n          <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"StartDate\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>StartDate</th>\n          <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"EndDate\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>EndDate</th>\n          <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"Actions\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <button mat-icon-button (click)=\"onDelete(element)\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>\n    <div class=\"fill\">\n\n    </div>\n\n  </div>\n\n\n</div>","import { Component, Inject } from '@angular/core'\nimport { MAT_SNACK_BAR_DATA, MatSnackBar } from '@angular/material/snack-bar'\n\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification-bar.component.html',\n  styleUrls: ['./notification-bar.component.scss'],\n})\nexport class NotificationBarComponent {\n  constructor(@Inject(MAT_SNACK_BAR_DATA) public data: { text: string }, public snackBar: MatSnackBar) {\n  }\n}\n","<div class=\"notification\">\n  <div class=\"notification__text\">\n    {{ data.text }}\n  </div>\n\n  <div class=\"notification__action\">\n    <button mat-icon-button (click)=\"snackBar.dismiss()\" class=\"notification__action-button\">\n      <mat-icon class=\"notification__action-icon\">close</mat-icon>\n    </button>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core'\nimport { Router } from '@angular/router'\nimport { RouterHistoryService } from '../../services/router-history.service'\n\n\n@Component({\n  selector: 'app-page-header-back',\n  templateUrl: './page-header-back.component.html',\n  styleUrls: ['./page-header-back.component.scss'],\n})\nexport class PageHeaderBackComponent {\n\n  @Input() link: string\n  @Input() ariaLabel: string\n\n  constructor(private router: Router, private routerHistory: RouterHistoryService) {\n  }\n\n  onBackClick() {\n    this.router.navigateByUrl(this.routerHistory.getLatestFrom(this.link) || this.link)\n  }\n}\n","<button mat-icon-button color=\"primary\" (click)=\"onBackClick()\" [attr.aria-label]=\"ariaLabel\">\n  <mat-icon>arrow_back</mat-icon>\n</button>\n","import { Component, Input } from '@angular/core'\n\n\n@Component({\n  selector: 'app-page-header-title',\n  templateUrl: './page-header-title.component.html',\n  styleUrls: ['./page-header-title.component.scss'],\n})\nexport class PageHeaderTitleComponent {\n\n  @Input() addons: string | number\n}\n","<div class=\"page-header-title\">\n  <h1 class=\"mat-headline page-header__heading page-header-title__heading\">\n    <ng-content></ng-content>\n  </h1>\n\n  <span class=\"page-header__addons\">{{ addons }}</span>\n</div>\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.scss'],\n})\nexport class PageHeaderComponent {\n}\n","<header class=\"mat-toolbar-single-row page-header\">\n  <ng-content></ng-content>\n</header>\n","import { Directive, HostListener } from '@angular/core'\nimport { Location } from '@angular/common'\n\n\n@Directive({\n  selector: '[appBackButton]',\n})\nexport class BackButtonDirective {\n\n  constructor(private location: Location) {\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.location.back()\n  }\n}\n","import { Directive, ElementRef, OnInit, EventEmitter, Output } from '@angular/core'\nimport { fromEvent } from 'rxjs'\nimport { debounceTime, map } from 'rxjs/operators'\n\n@Directive({\n  selector: '[appInput]',\n})\nexport class InputDebounceDirective implements OnInit {\n\n  @Output() delayedInput: EventEmitter<string>\n\n  constructor(private elementRef: ElementRef) {\n    this.delayedInput = new EventEmitter()\n  }\n\n  ngOnInit(): void {\n    fromEvent(this.elementRef.nativeElement, 'input')\n      .pipe(\n        map(() => this.elementRef.nativeElement.value),\n        debounceTime(800),\n      )\n      .subscribe((input: string) => this.delayedInput.next(input))\n  }\n}\n","export const sharedInterceptorProviders = [\n]\n","import { NgModule } from '@angular/core'\n\nimport { MatSidenavModule } from '@angular/material/sidenav'\nimport { MatButtonModule } from '@angular/material/button'\nimport { MatSnackBarModule } from '@angular/material/snack-bar'\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatToolbarModule } from '@angular/material/toolbar'\nimport { MatInputModule } from '@angular/material/input'\nimport { MatDatepickerModule } from '@angular/material/datepicker'\nimport { MatCheckboxModule } from '@angular/material/checkbox'\nimport { MatFormFieldModule } from '@angular/material/form-field'\nimport { MatListModule } from '@angular/material/list'\nimport { MatMenuModule } from '@angular/material/menu'\nimport { MatCardModule } from '@angular/material/card'\nimport { MatExpansionModule } from '@angular/material/expansion'\nimport { MatDialogModule } from '@angular/material/dialog'\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core'\nimport { MatTableModule } from '@angular/material/table'\nimport { MatSortModule } from '@angular/material/sort'\nimport { MatPaginatorModule } from '@angular/material/paginator'\n\n\n@NgModule({\n  exports: [\n    MatSidenavModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatListModule,\n    MatMenuModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatDialogModule,\n    MatNativeDateModule,\n    MatRippleModule,\n  ],\n})\nexport class MaterialModule {\n}\n","import { MatSnackBarConfig } from '@angular/material/snack-bar'\n\nexport const defaultSnackBarConfig: MatSnackBarConfig = {\n  duration: 2000,\n  panelClass: ['app-snack-bar'],\n}\n\nexport const successSnackBarConfig: MatSnackBarConfig = {\n  duration: 2000,\n  announcementMessage: 'Success.',\n  panelClass: ['app-snack-bar', 'app-snack-bar_success'],\n  verticalPosition: 'top',\n}\n\nexport const errorSnackBarConfig: MatSnackBarConfig = {\n  duration: 10000,\n  announcementMessage: 'An unknown error occurred.',\n  panelClass: ['app-snack-bar', 'app-snack-bar_error'],\n  verticalPosition: 'top',\n}\n","import { Injectable, NgZone } from '@angular/core'\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar'\nimport { NotificationBarComponent } from '../components/notification-bar/notification-bar.component'\nimport { defaultSnackBarConfig, errorSnackBarConfig, successSnackBarConfig } from '../models/snackbar.model'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotificationBarService {\n\n  constructor(public snackBar: MatSnackBar, private zone: NgZone) {\n  }\n\n  public showInfo(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(defaultSnackBarConfig, message, duration)\n  }\n\n  public showSuccess(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(successSnackBarConfig, message, duration)\n  }\n\n  public showError(message: string, duration?: number): MatSnackBarRef<SimpleSnackBar> {\n    return this.show(errorSnackBarConfig, message, duration)\n  }\n\n  private show(defaultConfig: MatSnackBarConfig, message: string, duration?: number) {\n    const snackBarConfig: MatSnackBarConfig = duration ? {...defaultConfig, duration} : defaultConfig\n    let ref\n\n    if (message) {\n      this.zone.run(() => ref = this.snackBar.openFromComponent(NotificationBarComponent, {\n        ...snackBarConfig,\n        data: {text: message},\n      }))\n    }\n\n    return ref\n  }\n\n  public dismiss(snackBarRef: MatSnackBarRef<SimpleSnackBar>): void {\n    return snackBarRef.dismiss()\n  }\n}\n","import { Injectable } from '@angular/core'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouterHistoryService {\n\n  private urls: string[] = []\n\n  public push(url: string): void {\n    this.urls.unshift(url)\n  }\n\n  public getLatestFrom(patternUrl: string): string | undefined {\n    return this.urls.find(url => url.indexOf(patternUrl) === 0)\n  }\n}\n","import { CanDeactivate } from '@angular/router'\nimport { Injectable } from '@angular/core'\nimport { MatDialog } from '@angular/material/dialog'\nimport { Observable, of } from 'rxjs'\nimport { CanDeactivateComponentModel } from '../models/can-deactivate-component.model'\nimport { ConfirmDialogComponent } from '../components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from '../models/dialog-data.model'\n\n\n@Injectable()\nexport class UnsavedChangesGuard implements CanDeactivate<CanDeactivateComponentModel> {\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  canDeactivate(component: CanDeactivateComponentModel): Observable<boolean> {\n\n    if (component.canDeactivate()) {\n      return of(true)\n    }\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      data: ({\n        title: 'Confirm Navigation',\n        message: 'You have unsaved changes. Are you sure you want to leave this page?',\n        btnCancel: 'Stay on this Page',\n        btnOk: 'Leave this Page',\n      } as DialogDataModel),\n    })\n\n    return dialogRef.afterClosed()\n  }\n}\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { MaterialModule } from './material.module'\n\nimport { sharedInterceptorProviders } from './interceptors'\nimport { BackButtonDirective } from './directives/back-button.directive'\nimport { InputDebounceDirective } from './directives/input-debounce.directive'\nimport { UnsavedChangesGuard } from './services/unsaved-changes.guard'\nimport { NotificationBarComponent } from './components/notification-bar/notification-bar.component'\nimport { PageHeaderComponent } from './components/page-header/page-header.component'\nimport { PageHeaderBackComponent } from './components/page-header-back/page-header-back.component'\nimport { PageHeaderTitleComponent } from './components/page-header-title/page-header-title.component'\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component'\nimport { NewBookingDialogComponent } from './components/new-booking-dialog/new-booking-dialog.component'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MaterialModule,\n  ],\n  declarations: [\n    BackButtonDirective,\n    InputDebounceDirective,\n    NotificationBarComponent,\n    ConfirmDialogComponent,\n    NewBookingDialogComponent,\n    PageHeaderComponent,\n    PageHeaderBackComponent,\n    PageHeaderTitleComponent,\n  ],\n  entryComponents: [\n    NotificationBarComponent,\n    ConfirmDialogComponent,\n  ],\n  providers: [\n    ...sharedInterceptorProviders,\n    UnsavedChangesGuard,\n  ],\n  exports: [\n    MaterialModule,\n    BackButtonDirective,\n    InputDebounceDirective,\n    PageHeaderComponent,\n    PageHeaderBackComponent,\n    PageHeaderTitleComponent,\n  ],\n})\n\nexport class SharedModule {\n}\n","import { createAction, props } from '@ngrx/store'\n\n\nexport const checkIsOnline = createAction('[Shared/isOnline] Check Is Online')\nexport const setIsOnline = createAction('[Shared/isOnline] Set Is Online', props<{ isOnline: boolean }>())\n\nexport const loadingOn = createAction('[Shared/Loading] API Loading...')\nexport const loadingOff = createAction('[Shared/Loading] API Loaded')\n","import { Injectable } from '@angular/core'\nimport { Actions, createEffect, ofType } from '@ngrx/effects'\nimport { map, mapTo, switchMap } from 'rxjs/operators'\nimport { fromEvent, merge, of } from 'rxjs'\nimport { checkIsOnline, setIsOnline } from './shared.actions'\nimport { NotificationBarService } from '../services/notification-bar.service'\nimport { MatSnackBarRef, SimpleSnackBar } from '@angular/material/snack-bar'\n\n\n@Injectable()\nexport class SharedEffects {\n\n  private ref: MatSnackBarRef<SimpleSnackBar> = null\n\n  constructor(private actions$: Actions, private notificationService: NotificationBarService) {\n  }\n\n  checkIsOnline$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(checkIsOnline.type),\n      switchMap(() => {\n        return merge(\n          of(navigator.onLine),\n          fromEvent(window, 'online').pipe(mapTo(true)),\n          fromEvent(window, 'offline').pipe(mapTo(false)),\n        )\n      }),\n      map(isOnline => {\n        this.showHideNotification(isOnline)\n        return {\n          isOnline,\n          type: setIsOnline.type,\n        }\n      }),\n    ),\n  )\n\n  private showHideNotification(isOnline: boolean): void {\n    if (!isOnline) {\n      this.ref = this.notificationService.showError('You are currently offline.', 999999)\n    } else if (this.ref) {\n      this.notificationService.dismiss(this.ref)\n    }\n  }\n}\n","import { createReducer, on } from '@ngrx/store'\nimport { initialSharedState } from './shared.state'\nimport { checkIsOnline, loadingOff, loadingOn, setIsOnline } from './shared.actions'\n\n\nexport const sharedReducer = createReducer(\n  initialSharedState,\n  on(checkIsOnline, (state) => ({...state, isOnline: false})),\n  on(setIsOnline, (state, {isOnline}) => ({...state, isOnline})),\n  on(loadingOn, (state) => ({...state, loading: true})),\n  on(loadingOff, (state) => ({...state, loading: false})),\n)\n","export interface SharedState {\n  isOnline: boolean\n  loading: boolean\n}\n\nexport const initialSharedState: SharedState = {\n  isOnline: false,\n  loading: false,\n}\n","// Default environment file\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:3000/api',\n}\n","import { enableProdMode } from '@angular/core'\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic'\n\nimport { AppModule } from './app/app.module'\nimport { environment } from './environments/environment'\n\nif (environment.production) {\n  enableProdMode()\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err))\n"]}