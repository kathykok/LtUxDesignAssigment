{"version":3,"sources":["webpack:///src/app/features/examples/components/confirm-dialog-example/confirm-dialog-example.component.ts","webpack:///src/app/features/examples/components/confirm-dialog-example/confirm-dialog-example.component.html","webpack:///src/app/features/examples/components/error-handler-example/error-handler-example.component.ts","webpack:///src/app/features/examples/components/error-handler-example/error-handler-example.component.html","webpack:///src/app/features/examples/components/input-debounce/input-debounce.component.ts","webpack:///src/app/features/examples/components/input-debounce/input-debounce.component.html","webpack:///src/app/features/examples/components/loading-example/loading-example.component.ts","webpack:///src/app/features/examples/components/loading-example/loading-example.component.html","webpack:///src/app/features/examples/components/local-storage-example/local-storage-example.component.ts","webpack:///src/app/features/examples/components/local-storage-example/local-storage-example.component.html","webpack:///src/app/features/examples/components/notification-example/notification-example.component.ts","webpack:///src/app/features/examples/components/notification-example/notification-example.component.html","webpack:///src/app/features/examples/examples-routing.module.ts","webpack:///src/app/features/examples/examples.component.ts","webpack:///src/app/features/examples/examples.component.html","webpack:///src/app/features/examples/examples.module.ts","webpack:///src/app/shared/models/local-storage-key.model.ts","webpack:///src/app/shared/services/local-storage.service.ts"],"names":["ConfirmDialogExampleComponent","dialog","dialogRef","open","width","data","title","message","afterClosed","subscribe","result","dialogResult","openConfirmDialog","selector","templateUrl","styleUrls","ErrorHandlerExampleComponent","http","get","runClientSiteErr404","runServerSiteErr401","InputDebounceComponent","LoadingExampleComponent","store","loading$","pipe","makeHttpRequest","LocalStorageExampleComponent","localStorageService","getExampleValue","set","EXAMPLE_KEY","getRandomIntInclusive","exampleValue","del","min","max","Math","ceil","floor","random","setExampleValue","delExampleValue","NotificationExampleComponent","notificationService","showSuccess","showError","showInfo","showSuccessNotification","showErrorNotification","showInfoNotification","routes","path","component","ExamplesRoutingModule","forChild","imports","exports","ExamplesComponent","ExamplesModule","declarations","LocalStorageKey","LocalStorageService","key","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","providedIn"],"mappings":"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","file":"features-examples-examples-module-es5.js","sourcesContent":["/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component, OnInit } from '@angular/core'\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'\nimport { ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from '../../../../shared/models/dialog-data.model'\n\n@Component({\n  selector: 'app-confirm-dialog-example',\n  templateUrl: './confirm-dialog-example.component.html',\n  styleUrls: ['./confirm-dialog-example.component.scss'],\n})\nexport class ConfirmDialogExampleComponent implements OnInit {\n\n  private dialogRef: MatDialogRef<ConfirmDialogComponent, boolean>\n  public dialogResult: boolean\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  openConfirmDialog() {\n    this.dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '280px',\n      data: ({\n        title: 'Confirm Dialog',\n        message: 'Custom message here...',\n      } as DialogDataModel),\n    })\n\n    this.dialogRef.afterClosed().subscribe(result => this.dialogResult = result)\n  }\n\n  ngOnInit(): void {\n    // this.dialogRef.afterClosed().subscribe(result => this.dialogResult = result)\n  }\n}\n","<p><code>dialogResult: <strong>{{ dialogResult }}</strong></code></p>\n\n<button mat-stroked-button (click)=\"openConfirmDialog()\" [color]=\"'primary'\">\n  Open Dialog\n</button>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component } from '@angular/core'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-error-handler-example',\n  templateUrl: './error-handler-example.component.html',\n  styleUrls: ['./error-handler-example.component.scss'],\n})\nexport class ErrorHandlerExampleComponent {\n\n  constructor(\n    private http: HttpClient,\n  ) {\n  }\n\n  runClientSiteErr404() {\n    this.http.get('http://localhost:4200/error').subscribe()\n  }\n\n  runServerSiteErr401() {\n    this.http.get('http://getstatuscode.com/401').subscribe()\n  }\n}\n","<button mat-stroked-button (click)=\"runClientSiteErr404()\" [color]=\"'warn'\" class=\"mr-3\">\n  Run ERROR: 404 Not Found\n</button>\n\n<button mat-stroked-button (click)=\"runServerSiteErr401()\" [color]=\"'warn'\">\n  Run ERROR: 401 Unauthorized\n</button>\n","import { Component } from '@angular/core'\n\n\n@Component({\n  selector: 'app-input-debounce',\n  templateUrl: './input-debounce.component.html',\n  styleUrls: ['./input-debounce.component.scss'],\n})\nexport class InputDebounceComponent {\n\n  public val: string\n}\n","<div>\n  <mat-form-field>\n    <mat-label>Text field</mat-label>\n    <input matInput appInput (delayedInput)=\"val=$event\">\n  </mat-form-field>\n</div>\n\ndelayed emit: <code><strong>{{ val }}</strong></code>\n","import { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { select, Store } from '@ngrx/store'\nimport { SharedState } from '../../../../shared/store/shared.state'\nimport { selectLoading } from '../../../../shared/store/shared.selectors'\nimport { HttpClient } from '@angular/common/http'\n\n@Component({\n  selector: 'app-loading-example',\n  templateUrl: './loading-example.component.html',\n  styleUrls: ['./loading-example.component.scss'],\n})\nexport class LoadingExampleComponent {\n\n  public loading$: Observable<boolean>\n\n  constructor(private store: Store<SharedState>, private http: HttpClient) {\n    this.loading$ = store.pipe(select(selectLoading))\n  }\n\n  makeHttpRequest() {\n    this.http.get('http://getstatuscode.com/401').subscribe()\n  }\n}\n","<div class=\"loading-example__wrap\">\n  <span>Watch the icon:</span>\n  <div class=\"loading-example__icon-wrap\">\n    <mat-icon>hourglass_empty</mat-icon>\n    <mat-icon *ngIf=\"(loading$ | async)\" class=\"loading-example__icon-animated\" [color]=\"'primary'\">\n      hourglass_full\n    </mat-icon>\n  </div>\n  <span>after clicked the button.</span>\n</div>\n\n<button mat-stroked-button (click)=\"makeHttpRequest()\" [color]=\"'primary'\">\n  Make HTTP Request\n</button>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component, OnInit } from '@angular/core'\nimport { LocalStorageService } from '../../../../shared/services/local-storage.service'\nimport { LocalStorageKey } from '../../../../shared/models/local-storage-key.model'\n\n@Component({\n  selector: 'app-local-storage-example',\n  templateUrl: './local-storage-example.component.html',\n  styleUrls: ['./local-storage-example.component.scss'],\n})\nexport class LocalStorageExampleComponent implements OnInit {\n\n  public exampleValue: string\n\n  constructor(\n    private localStorageService: LocalStorageService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getExampleValue()\n  }\n\n  setExampleValue() {\n    this.localStorageService.set(LocalStorageKey.EXAMPLE_KEY, this.getRandomIntInclusive(1000, 9999))\n    this.getExampleValue()\n  }\n\n  getExampleValue() {\n    this.exampleValue = this.localStorageService.get(LocalStorageKey.EXAMPLE_KEY)\n  }\n\n  delExampleValue() {\n    this.localStorageService.del(LocalStorageKey.EXAMPLE_KEY)\n    this.getExampleValue()\n  }\n\n  private getRandomIntInclusive(min, max) {\n    min = Math.ceil(min)\n    max = Math.floor(max)\n    return Math.floor(Math.random() * (max - min + 1)) + min\n  }\n}\n","<p><code>exampleValue: <strong>{{ exampleValue }}</strong></code></p>\n\n<p>\n  <button mat-stroked-button (click)=\"setExampleValue()\" [color]=\"'primary'\" class=\"mr-3\">\n    Set random exampleValue\n  </button>\n\n  <button mat-stroked-button (click)=\"delExampleValue()\" [color]=\"'warn'\">\n    Delete exampleValue\n  </button>\n</p>\n\nPress <code><strong>F5</strong></code> and back here to check it!\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { Component } from '@angular/core'\nimport { NotificationBarService } from '../../../../shared/services/notification-bar.service'\n\n@Component({\n  selector: 'app-notification-example',\n  templateUrl: './notification-example.component.html',\n  styleUrls: ['./notification-example.component.scss'],\n})\nexport class NotificationExampleComponent {\n\n  constructor(\n    private notificationService: NotificationBarService,\n  ) {\n  }\n\n  showSuccessNotification() {\n    this.notificationService.showSuccess('Example success notification.', 3500)\n  }\n\n  showErrorNotification() {\n    this.notificationService.showError('Example error notification.', 3500)\n  }\n\n  showInfoNotification() {\n    this.notificationService.showInfo('Example info notification.', 3500)\n  }\n}\n","<button mat-stroked-button (click)=\"showSuccessNotification()\" [color]=\"'primary'\" class=\"mr-3\">\n  Show success notification\n</button>\n\n<button mat-stroked-button (click)=\"showErrorNotification()\" [color]=\"'warn'\" class=\"mr-3\">\n  Show error notification\n</button>\n\n<button mat-stroked-button (click)=\"showInfoNotification()\"  class=\"mr-3\">\n  Show info notification\n</button>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\nimport { ExamplesComponent } from './examples.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExamplesComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExamplesRoutingModule {\n}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-examples',\n  templateUrl: './examples.component.html',\n  styleUrls: ['./examples.component.scss'],\n})\nexport class ExamplesComponent {\n}\n","<app-page-header>\n  <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n  <app-page-header-title>Features lists</app-page-header-title>\n</app-page-header>\n\n<div class=\"page-content\">\n  <mat-accordion>\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Notifications</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For displaying snack-bar notifications.</p>\n      <app-notification-example></app-notification-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Confirm Dialog</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For displaying modal dialogs with confirm action.</p>\n      <app-confirm-dialog-example></app-confirm-dialog-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Local Storage</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          service\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <app-local-storage-example></app-local-storage-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Offline Indicator</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      Disable your internet connection or go to <strong>Network</strong> - chrome developer tab, and set it to <em>Offline</em>.\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>HTTP Error Handler</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>For running errors.</p>\n      <app-error-handler-example></app-error-handler-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Loading</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          event handling\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <app-loading-example></app-loading-example>\n    </mat-expansion-panel>\n\n    <mat-expansion-panel>\n      <mat-expansion-panel-header>\n        <mat-panel-title class=\"flex-basis\">\n          <strong>Input Debounce</strong>\n        </mat-panel-title>\n        <mat-panel-description>\n          directive\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Write a text and see emitted value after 1 second delay.</p>\n      <app-input-debounce></app-input-debounce>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","/*\n  This will be deleted after execute ./cleanup.sh script.\n*/\n\nimport { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { SharedModule } from '../../shared/shared.module'\nimport { ExamplesRoutingModule } from './examples-routing.module'\nimport { ExamplesComponent } from './examples.component'\nimport { NotificationExampleComponent } from './components/notification-example/notification-example.component'\nimport { LocalStorageExampleComponent } from './components/local-storage-example/local-storage-example.component'\nimport { ErrorHandlerExampleComponent } from './components/error-handler-example/error-handler-example.component'\nimport { LoadingExampleComponent } from './components/loading-example/loading-example.component'\nimport { InputDebounceComponent } from './components/input-debounce/input-debounce.component'\nimport { ConfirmDialogExampleComponent } from './components/confirm-dialog-example/confirm-dialog-example.component'\n\n@NgModule({\n  declarations: [\n    ExamplesComponent,\n    NotificationExampleComponent,\n    LocalStorageExampleComponent,\n    ErrorHandlerExampleComponent,\n    LoadingExampleComponent,\n    InputDebounceComponent,\n    ConfirmDialogExampleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ExamplesRoutingModule,\n    SharedModule,\n  ],\n})\nexport class ExamplesModule {\n}\n","export enum LocalStorageKey {\n  EXAMPLE_KEY = 'EXAMPLE_KEY',\n}\n","import { Injectable } from '@angular/core'\nimport { LocalStorageKey } from '../models/local-storage-key.model'\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorageService {\n\n  // IMPORTANT: do not store sensitive data in local storage,\n  // to store data like JWT token use cookies instead!\n\n  public set(key: LocalStorageKey, data: any): void {\n    localStorage.setItem(key, JSON.stringify(data))\n  }\n\n  public get(key: string): string {\n    return JSON.parse(localStorage.getItem(key))\n  }\n\n  public del(key: string): void {\n    localStorage.removeItem(key)\n  }\n}\n"]}