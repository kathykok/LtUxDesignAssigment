{"version":3,"sources":["./src/app/features/posts/components/post-create/post-create.component.ts","./src/app/features/posts/components/post-create/post-create.component.html","./src/app/features/posts/components/post-details/post-details.component.ts","./src/app/features/posts/components/post-details/post-details.component.html","./src/app/features/posts/components/post-update/post-update.component.ts","./src/app/features/posts/components/post-update/post-update.component.html","./src/app/features/posts/components/posts-list/posts-list.component.ts","./src/app/features/posts/components/posts-list/posts-list.component.html","./src/app/features/posts/posts-routing.module.ts","./src/app/features/posts/posts.component.ts","./src/app/features/posts/posts.component.html","./src/app/features/posts/posts.module.ts","./src/app/features/posts/store/posts.selectors.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACkB;AAGR;;;;;;;;;;;;;;;;ICW/C,4EACE;IAAA,qFACF;IAAA,4DAAY;;;IAMZ,4EACE;IAAA,sFACF;IAAA,4DAAY;;;IAOZ,4EACE;IAAA,qFACF;IAAA,4DAAY;;;ADrBjB,MAAM,mBAAmB;IAG9B,YACU,WAAwB,EACxB,KAAwB,EACxB,YAAoC;QAFpC,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAmB;QACxB,iBAAY,GAAZ,YAAY,CAAwB;IAE9C,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,yBAAyB,EAAE;IAClD,CAAC;IAEM,gBAAgB;QACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4EAAe,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAC,CAAC,CAAC;SAClE;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,6CAA6C,CAAC;SAC3E;IACH,CAAC;IAEO,yBAAyB;QAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC;IACJ,CAAC;IAED,aAAa;QACX,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC7B,CAAC;;sFAhCU,mBAAmB;mGAAnB,mBAAmB;QCbhC,sEACE;QAAA,kFACE;QAAA,qFAAmG;QACnG,wFAAuB;QAAA,sEAAW;QAAA,4DAAwB;QAC5D,4DAAkB;QAElB,yEACE;QAAA,yEACE;QAAA,2EACE;QAAA,0EACE;QAD2B,2IAAU,sBAAkB,IAAC;QACxD,oFACE;QAAA,6EAAW;QAAA,yEAAa;QAAA,4DAAY;QACpC,uEACA;QAAA,uFAAwE;QACxE,sFAAyC;QACzC,6HACE;QAEJ,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,sEAAU;QAAA,4DAAY;QACjC,2EACA;QAAA,6HACE;QAEF,gFAAsB;QAAA,wDAA2B;QAAA,4DAAW;QAC9D,4DAAiB;QAEjB,qFACE;QAAA,6EAAW;QAAA,gEAAI;QAAA,4DAAY;QAC3B,2EAAmE;QACnE,6HACE;QAEJ,4DAAiB;QAEjB,2EACE;QAAA,8EAA8D;QAAA,kEAAM;QAAA,4DAAS;QAC7E,8EAAsD;QAAA,kEAAM;QAAA,4DAAS;QACvE,4DAAM;QACR,4DAAO;QACT,4DAAW;QACb,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;QA3CoB,0DAAsB;QAAtB,+EAAsB;QAOlC,0DAAsB;QAAtB,mFAAsB;QAGR,0DAA0B;QAA1B,mFAA0B;QACT,0DAAc;QAAd,oEAAc;QAEpC,0DAAiD;QAAjD,+GAAiD;QAOrC,0DAA2B;QAA3B,oFAA2B;QACvC,0DAAkD;QAAlD,gHAAkD;QAGvC,0DAA2B;QAA3B,+FAA2B;QAK9B,0DAA0B;QAA1B,mFAA0B;QAClC,0DAAiD;QAAjD,+GAAiD;QAMzC,0DAA4B;QAA5B,8IAA4B;;6FDzB9C,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AAIN;AAEiB;AACc;AACrC;;;;;;;;;;;;;ICRrC,sEACE;IAAA,kFACE;IAAA,qFAAmG;IACnG,2FAAmD;;IAAA,uDAAc;IAAA,4DAAwB;IACzF,4EACE;IAAA,2EAAU;IAAA,+DAAI;IAAA,4DAAW;IAC3B,4DAAS;IACT,4EACE;IAD4D,yVAAyB;IACrF,4EAAU;IAAA,kEAAM;IAAA,4DAAW;IAC7B,4DAAS;IACX,4DAAkB;IAElB,0EACE;IAAA,wDACF;IAAA,4DAAM;IACR,4DAAM;;;IAboB,0DAAsB;IAAtB,+EAAsB;IACrB,0DAA2B;IAA3B,iJAA2B;IAAC,0DAAc;IAAd,8EAAc;IACF,0DAA+C;IAA/C,yJAA+C;IAS9G,0DACF;IADE,wFACF;;ADCK,MAAM,oBAAoB;IAG/B,YACU,cAA8B,EAC9B,KAAwB;QADxB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,UAAK,GAAL,KAAK,CAAmB;IAElC,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,6EAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0EAAa,CAAC,EAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;QAC1G,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,MAAM;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4EAAe,CAAC,EAAC,EAAE,EAAE,MAAM,EAAC,CAAC,CAAC;IACpD,CAAC;;wFAlBU,oBAAoB;oGAApB,oBAAoB;QCfjC,iHACE;;;QADG,4IAA6B;;6FDerB,oBAAoB;cALhC,uDAAS;eAAC;gBACT,QAAQ,EAAE,kBAAkB;gBAC5B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;AEdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4D;AAEO;AACpB;AACJ;AAGgD;AAE/B;;;;;;;;;;;;;;;;;ICShD,4EACE;IAAA,qFACF;IAAA,4DAAY;;;IAMZ,4EACE;IAAA,sFACF;IAAA,4DAAY;;;IAOZ,4EACE;IAAA,qFACF;IAAA,4DAAY;;;;;IArCxB,sEACE;IAAA,kFACE;IAAA,qFAAmG;IACnG,2FAAmD;;IAAA,uDAAc;IAAA,4DAAwB;IACzF,4EACE;IAD4E,wVAAyB;IACrG,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAC7B,4DAAS;IACX,4DAAkB;IAElB,yEACE;IAAA,0EACE;IAAA,4EACE;IAAA,2EACE;IAD2B,+TAA6B;IACxD,qFACE;IAAA,6EAAW;IAAA,yEAAa;IAAA,4DAAY;IACpC,uEACA;IAAA,uFAAwE;IACxE,uFAAyC;IACzC,mIACE;IAEJ,4DAAiB;IAEjB,qFACE;IAAA,6EAAW;IAAA,sEAAU;IAAA,4DAAY;IACjC,4EACA;IAAA,mIACE;IAEF,gFAAsB;IAAA,wDAA2B;IAAA,4DAAW;IAC9D,4DAAiB;IAEjB,qFACE;IAAA,6EAAW;IAAA,gEAAI;IAAA,4DAAY;IAC3B,2EAAmE;IACnE,mIACE;IAEJ,4DAAiB;IAEjB,2EACE;IAAA,8EAA8D;IAAA,kEAAM;IAAA,4DAAS;IAC7E,8EAAsD;IAAA,kEAAM;IAAA,4DAAS;IACvE,4DAAM;IACR,4DAAO;IACT,4DAAW;IACb,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;;;IA9CoB,0DAAsB;IAAtB,+EAAsB;IACrB,0DAA2B;IAA3B,kJAA2B;IAAC,0DAAc;IAAd,8EAAc;IASvD,0DAAsB;IAAtB,sFAAsB;IAGR,0DAA0B;IAA1B,mFAA0B;IACT,0DAAc;IAAd,oEAAc;IAEpC,0DAAiD;IAAjD,kHAAiD;IAOrC,0DAA2B;IAA3B,oFAA2B;IACvC,0DAAkD;IAAlD,mHAAkD;IAGvC,0DAA2B;IAA3B,+FAA2B;IAK9B,0DAA0B;IAA1B,mFAA0B;IAClC,0DAAiD;IAAjD,kHAAiD;IAM3B,0DAA4B;IAA5B,8IAA4B;;ADvBlE,MAAM,mBAAmB;IAK9B,YACU,cAA8B,EAC9B,WAAwB,EACxB,KAAwB,EACxB,YAAoC;QAHpC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAmB;QACxB,iBAAY,GAAZ,YAAY,CAAwB;QANtC,kBAAa,GAAiB,IAAI,iDAAY,EAAE;IAQxD,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,6EAAc,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YAE/D,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;gBAC9C,IAAI,CAAC,IAAI,EAAE;oBACT,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,0EAAa,CAAC,EAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAC,CAAC,CAAC;iBACpD;YACH,CAAC,CAAC,CACH;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,gBAAgB;QACrB,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4EAAe,CAAC;gBAClC,UAAU,EAAE;oBACV,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK;oBACnC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;iBAC7B;aACF,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,6CAA6C,CAAC;SAC3E;IACH,CAAC;IAEM,MAAM,CAAC,MAAM;QAClB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,4EAAe,CAAC,EAAC,EAAE,EAAE,MAAM,EAAC,CAAC,CAAC;IACpD,CAAC;IAEO,mBAAmB,CAAC,IAAU;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChD,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1D,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpD,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC;IACJ,CAAC;IAEM,aAAa;QAClB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK;IAC7B,CAAC;IAEM,WAAW;QAChB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE;IAClC,CAAC;;sFA5DU,mBAAmB;mGAAnB,mBAAmB;QClBhC,iHACE;;;QADG,4IAA6B;;6FDkBrB,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC5C;;;;;;;;;;;;;;AEjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AAGE;AAEU;AACI;;;;;;;;;;;;;;ICWnD,mFACE;IAAA,+EAAuC;IAAA,qEAAU;IAAA,4DAAW;IAC5D,0EAAc;IAAA,uDAAc;IAAA,4DAAM;IAClC,0EAAsC;IAAA,uDAAoB;;IAAA,4DAAM;IAClE,4DAAgB;;;IAJqC,yJAAqC;IAE1E,0DAAc;IAAd,8EAAc;IACU,0DAAoB;IAApB,8IAAoB;;;;;IApBlE,sEACE;IAAA,kFACE;IAAA,qFAAuF;IACvF,2FAA+C;IAAA,qEAAU;IAAA,4DAAwB;IACjF,4EACE;IAD0E,sTAAqB;IAC/F,2EAAU;IAAA,kEAAO;IAAA,4DAAW;IAC9B,4DAAS;IACX,4DAAkB;IAElB,yEACE;IAAA,4EACE;IAAA,4EAAU;IAAA,+DAAG;IAAA,4DAAW;IAC1B,4DAAS;IACX,4DAAM;IAEN,0EACE;IAAA,+EACE;IAAA,0IACE;IAIJ,4DAAW;IACb,4DAAM;IACR,4DAAM;;;IAtBoB,0DAAY;IAAZ,qEAAY;IACX,0DAAuB;IAAvB,mFAAuB;IAOY,0DAAqC;IAArC,6IAAqC;IAO9E,0DAA0B;IAA1B,6EAA0B;;ADJxC,MAAM,kBAAkB;IAG7B,YAAoB,KAAwB;QAAxB,UAAK,GAAL,KAAK,CAAmB;QAC1C,KAAK,CAAC,QAAQ,CAAC,sEAAS,EAAE,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,0DAAM,CAAC,kEAAW,CAAC,CAAC;IACpD,CAAC;IAEM,SAAS;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,sEAAS,EAAE,CAAC;IAClC,CAAC;;oFAVU,kBAAkB;kGAAlB,kBAAkB;QCb/B,+GACE;;;QADG,6IAA+B;;6FDavB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACc;AAEJ;AAC+B;AACG;AACA;AACG;AACN;;;AAEjF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;QACzB,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,UAAU,EAAE,MAAM;gBAClB,SAAS,EAAE,MAAM;aAClB;YACD;gBACE,IAAI,EAAE,MAAM;gBACZ,SAAS,EAAE,8FAAkB;aAC9B;YACD;gBACE,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iGAAmB;gBAC9B,aAAa,EAAE,CAAC,0FAAmB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,SAAS,EAAE,iGAAmB;gBAC9B,aAAa,EAAE,CAAC,0FAAmB,CAAC;aACrC;YACD;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,oGAAoB;aAChC;SACF;KACF;CACF;AAMM,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AC7CD;AAAA;AAAA;AAAA;AAAyC;;;AAOlC,MAAM,cAAc;;4EAAd,cAAc;8FAAd,cAAc;QCP3B,2EAA+B;;6FDOlB,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACM;AACM;AACO;AACF;AACP;AAC+B;AACM;AACH;AACA;;AAkB7E,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAPb;YACP,4DAAY;YACZ,wEAAkB;YAClB,kEAAY;YACZ,kEAAmB;SACpB;mIAEU,WAAW,mBAbpB,+DAAc;QACd,8FAAkB;QAClB,oGAAoB;QACpB,iGAAmB;QACnB,iGAAmB,aAGnB,4DAAY;QACZ,wEAAkB;QAClB,kEAAY;QACZ,kEAAmB;6FAGV,WAAW;cAfvB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,+DAAc;oBACd,8FAAkB;oBAClB,oGAAoB;oBACpB,iGAAmB;oBACnB,iGAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;oBAClB,kEAAY;oBACZ,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAA;AAAmE;AACX;AAExD,MAAM,EAAE,SAAS,EAAE,GAAG,yDAAY,CAAC,YAAY,EAAE;AACjD,MAAM,gBAAgB,GAAG,yEAAqB,CAAa,OAAO,CAAC;AAE5D,MAAM,WAAW,GAAG,kEAAc,CACvC,gBAAgB,EAChB,SAAS,CACV;AACM,MAAM,cAAc,GAAG,CAAC,MAAc,EAAE,EAAE,CAAC,kEAAc,CAC9D,gBAAgB,EAChB,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAC1C","file":"features-posts-posts-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Store } from '@ngrx/store'\nimport { PostsState } from '../../store/posts.state'\nimport { createPostsItem } from '../../store/posts.actions'\nimport { NotificationBarService } from '../../../../shared/services/notification-bar.service'\nimport { CanDeactivateComponentModel } from '../../../../shared/models/can-deactivate-component.model'\n\n@Component({\n  selector: 'app-post-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.scss'],\n})\nexport class PostCreateComponent implements CanDeactivateComponentModel, OnInit {\n  public postForm: FormGroup\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store<PostsState>,\n    private notification: NotificationBarService,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.postForm = this.createPostCreateFormGroup()\n  }\n\n  public onPostFormSubmit(): void {\n    if (this.postForm.valid) {\n      this.store.dispatch(createPostsItem({post: this.postForm.value}))\n    } else {\n      this.notification.showError('Form contains errors. Fix it and try again.')\n    }\n  }\n\n  private createPostCreateFormGroup(): FormGroup {\n    return this.formBuilder.group({\n      date: [new Date(), Validators.required],\n      title: ['', Validators.required],\n      body: ['', Validators.required],\n    })\n  }\n\n  canDeactivate(): boolean {\n    return !this.postForm.dirty\n  }\n}\n","<div>\n  <app-page-header>\n    <app-page-header-back [link]=\"'/posts/list'\" ariaLabel=\"Back to Posts List\"></app-page-header-back>\n    <app-page-header-title>Post Create</app-page-header-title>\n  </app-page-header>\n\n  <div class=\"page-content\">\n    <div class=\"squeeze\">\n      <mat-card>\n        <form [formGroup]=\"postForm\" (submit)=\"onPostFormSubmit()\">\n          <mat-form-field class=\"w-100\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [formControlName]=\"'date'\" [matDatepicker]=\"picker\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"postForm.get('date').hasError('required')\">\n              Date of Post is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"w-100\">\n            <mat-label>Post Title</mat-label>\n            <input matInput #title [formControlName]=\"'title'\" maxlength=\"40\">\n            <mat-error *ngIf=\"postForm.get('title').hasError('required')\">\n              Title of Post is required\n            </mat-error>\n            <mat-hint align=\"end\">{{title.value.length}} / 40</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field class=\"w-100\">\n            <mat-label>Body</mat-label>\n            <textarea matInput [formControlName]=\"'body'\" rows=\"10\"></textarea>\n            <mat-error *ngIf=\"postForm.get('body').hasError('required')\">\n              Body of Post is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"text-right\">\n            <button mat-button [routerLink]=\"['/','posts']\" type=\"button\">Cancel</button>\n            <button mat-flat-button color=\"primary\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params } from '@angular/router'\nimport { Observable } from 'rxjs'\nimport { PostsState } from '../../store/posts.state'\nimport { select, Store } from '@ngrx/store'\nimport { Post } from '../../models/post.model'\nimport { selectPostById } from '../../store/posts.selectors'\nimport { deletePostsItem, readPostsItem } from '../../store/posts.actions'\nimport { take } from 'rxjs/operators'\n\n@Component({\n  selector: 'app-post-details',\n  templateUrl: './post-details.component.html',\n  styleUrls: ['./post-details.component.scss'],\n})\nexport class PostDetailsComponent implements OnInit {\n  public post$: Observable<Post>\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private store: Store<PostsState>,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.post$ = this.store.pipe(select(selectPostById(params.id)))\n      this.post$.pipe(take(1)).subscribe(post => !post && this.store.dispatch(readPostsItem({id: params.id})))\n    })\n  }\n\n  public delete(postId) {\n    this.store.dispatch(deletePostsItem({id: postId}))\n  }\n}\n","<div *ngIf=\"post$ | async as post\">\n  <app-page-header>\n    <app-page-header-back [link]=\"'/posts/list'\" ariaLabel=\"Back to Posts List\"></app-page-header-back>\n    <app-page-header-title [addons]=\"post.date | date\">{{post.title}}</app-page-header-title>\n    <button mat-icon-button color=\"primary\" aria-label=\"Edit Post\" [routerLink]=\"['/','posts', post.id, 'update']\" class=\"ml-auto\">\n      <mat-icon>edit</mat-icon>\n    </button>\n    <button mat-icon-button color=\"warn\" aria-label=\"Delete Post\" (click)=\"delete(post.id)\">\n      <mat-icon>delete</mat-icon>\n    </button>\n  </app-page-header>\n\n  <div class=\"page-content\">\n    {{post.body}}\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core'\nimport { ActivatedRoute, Params } from '@angular/router'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms'\nimport { Observable, Subscription } from 'rxjs'\nimport { select, Store } from '@ngrx/store'\nimport { CanDeactivateComponentModel } from '../../../../shared/models/can-deactivate-component.model'\nimport { PostsState } from '../../store/posts.state'\nimport { deletePostsItem, readPostsItem, updatePostsItem } from '../../store/posts.actions'\nimport { Post } from '../../models/post.model'\nimport { selectPostById } from '../../store/posts.selectors'\nimport { NotificationBarService } from '../../../../shared/services/notification-bar.service'\n\n\n@Component({\n  selector: 'app-post-update',\n  templateUrl: './post-update.component.html',\n  styleUrls: ['./post-update.component.scss'],\n})\nexport class PostUpdateComponent implements CanDeactivateComponentModel, OnInit, OnDestroy {\n  public postForm: FormGroup\n  public post$: Observable<Post>\n  private subscriptions: Subscription = new Subscription()\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private store: Store<PostsState>,\n    private notification: NotificationBarService,\n  ) {\n  }\n\n  public ngOnInit(): void {\n    this.activatedRoute.params.subscribe((params: Params) => {\n      this.post$ = this.store.pipe(select(selectPostById(params.id)))\n\n      this.subscriptions.add(\n        this.post$.subscribe(post => {\n          this.postForm = this.createPostFormGroup(post)\n          if (!post) {\n            this.store.dispatch(readPostsItem({id: params.id}))\n          }\n        }),\n      )\n    })\n  }\n\n  public onPostFormSubmit(): void {\n    if (this.postForm.valid) {\n      this.store.dispatch(updatePostsItem({\n        updatePost: {\n          id: this.postForm.controls.id.value,\n          changes: this.postForm.value,\n        },\n      }))\n    } else {\n      this.notification.showError('Form contains errors. Fix it and try again.')\n    }\n  }\n\n  public delete(postId) {\n    this.store.dispatch(deletePostsItem({id: postId}))\n  }\n\n  private createPostFormGroup(post: Post): FormGroup {\n    return this.formBuilder.group({\n      id: [post ? post.id : null, Validators.required],\n      date: [post ? post.date : new Date(), Validators.required],\n      title: [post ? post.title : '', Validators.required],\n      body: [post ? post.body : '', Validators.required],\n    })\n  }\n\n  public canDeactivate(): boolean {\n    return !this.postForm.dirty\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.unsubscribe()\n  }\n}\n","<div *ngIf=\"post$ | async as post\">\n  <app-page-header>\n    <app-page-header-back [link]=\"'/posts/list'\" ariaLabel=\"Back to Posts List\"></app-page-header-back>\n    <app-page-header-title [addons]=\"post.date | date\">{{post.title}}</app-page-header-title>\n    <button mat-icon-button color=\"warn\" aria-label=\"Delete Post\" class=\"ml-auto\" (click)=\"delete(post.id)\">\n      <mat-icon>delete</mat-icon>\n    </button>\n  </app-page-header>\n\n  <div class=\"page-content\">\n    <div class=\"squeeze\">\n      <mat-card>\n        <form [formGroup]=\"postForm\" (submit)=\"onPostFormSubmit()\">\n          <mat-form-field class=\"w-100\">\n            <mat-label>Choose a date</mat-label>\n            <input matInput [formControlName]=\"'date'\" [matDatepicker]=\"picker\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n            <mat-error *ngIf=\"postForm.get('date').hasError('required')\">\n              Date of Post is required\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field class=\"w-100\">\n            <mat-label>Post Title</mat-label>\n            <input matInput #title [formControlName]=\"'title'\" maxlength=\"40\">\n            <mat-error *ngIf=\"postForm.get('title').hasError('required')\">\n              Title of Post is required\n            </mat-error>\n            <mat-hint align=\"end\">{{title.value.length}} / 40</mat-hint>\n          </mat-form-field>\n\n          <mat-form-field class=\"w-100\">\n            <mat-label>Body</mat-label>\n            <textarea matInput [formControlName]=\"'body'\" rows=\"10\"></textarea>\n            <mat-error *ngIf=\"postForm.get('body').hasError('required')\">\n              Body of Post is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"text-right\">\n            <button mat-button type=\"button\" [routerLink]=\"['/','posts']\">Cancel</button>\n            <button mat-flat-button color=\"primary\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core'\nimport { Observable } from 'rxjs'\nimport { Post } from '../../models/post.model'\nimport { select, Store } from '@ngrx/store'\nimport { PostsState } from '../../store/posts.state'\nimport { readPosts } from '../../store/posts.actions'\nimport { selectPosts } from '../../store/posts.selectors'\n\n@Component({\n  selector: 'app-posts-list',\n  templateUrl: './posts-list.component.html',\n  styleUrls: ['./posts-list.component.scss'],\n})\nexport class PostsListComponent {\n  public posts$: Observable<Post[]>\n\n  constructor(private store: Store<PostsState>) {\n    store.dispatch(readPosts())\n    this.posts$ = this.store.pipe(select(selectPosts))\n  }\n\n  public onRefresh(): void {\n    this.store.dispatch(readPosts())\n  }\n}\n","<div *ngIf=\"posts$ | async as posts\">\n  <app-page-header>\n    <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n    <app-page-header-title [addons]=\"posts.length\">Posts List</app-page-header-title>\n    <button mat-icon-button color=\"primary\" aria-label=\"Reload\" class=\"ml-auto\" (click)=\"onRefresh()\">\n      <mat-icon>refresh</mat-icon>\n    </button>\n  </app-page-header>\n\n  <div class=\"floating-action\">\n    <button mat-fab color=\"primary\" aria-label=\"Add new item\" [routerLink]=\"['/','posts','create']\">\n      <mat-icon>add</mat-icon>\n    </button>\n  </div>\n\n  <div class=\"page-content\">\n    <mat-list class=\"pt-0\">\n      <mat-list-item *ngFor=\"let post of posts\" mat-ripple [routerLink]=\"['/','posts', post.id]\">\n        <mat-icon mat-list-icon color=\"accent\">event_note</mat-icon>\n        <div mat-line>{{post.title}}</div>\n        <div mat-line class=\"post-item__date\">{{post.date | date}}</div>\n      </mat-list-item>\n    </mat-list>\n  </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { PostsComponent } from './posts.component'\nimport { PostsListComponent } from './components/posts-list/posts-list.component'\nimport { PostCreateComponent } from './components/post-create/post-create.component'\nimport { PostUpdateComponent } from './components/post-update/post-update.component'\nimport { PostDetailsComponent } from './components/post-details/post-details.component'\nimport { UnsavedChangesGuard } from '../../shared/services/unsaved-changes.guard'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostsComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'list',\n        pathMatch: 'full',\n      },\n      {\n        path: 'list',\n        component: PostsListComponent,\n      },\n      {\n        path: 'create',\n        component: PostCreateComponent,\n        canDeactivate: [UnsavedChangesGuard],\n      },\n      {\n        path: ':id/update',\n        component: PostUpdateComponent,\n        canDeactivate: [UnsavedChangesGuard],\n      },\n      {\n        path: ':id',\n        component: PostDetailsComponent,\n      },\n    ],\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PostsRoutingModule {\n}\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss'],\n})\nexport class PostsComponent {\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { ReactiveFormsModule } from '@angular/forms'\nimport { PostsRoutingModule } from './posts-routing.module'\nimport { SharedModule } from '../../shared/shared.module'\nimport { PostsComponent } from './posts.component'\nimport { PostsListComponent } from './components/posts-list/posts-list.component'\nimport { PostDetailsComponent } from './components/post-details/post-details.component'\nimport { PostCreateComponent } from './components/post-create/post-create.component'\nimport { PostUpdateComponent } from './components/post-update/post-update.component'\n\n\n@NgModule({\n  declarations: [\n    PostsComponent,\n    PostsListComponent,\n    PostDetailsComponent,\n    PostCreateComponent,\n    PostUpdateComponent,\n  ],\n  imports: [\n    CommonModule,\n    PostsRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class PostsModule {\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { postsAdapter, PostsState } from './posts.state'\n\nconst { selectAll } = postsAdapter.getSelectors()\nconst selectPostsState = createFeatureSelector<PostsState>('posts')\n\nexport const selectPosts = createSelector(\n  selectPostsState,\n  selectAll,\n)\nexport const selectPostById = (postId: string) => createSelector(\n  selectPostsState,\n  postsState => postsState.entities[postId],\n)\n"],"sourceRoot":"webpack:///"}