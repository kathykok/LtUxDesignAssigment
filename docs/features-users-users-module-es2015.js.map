{"version":3,"sources":["./src/app/features/users/components/users-list/users-list.component.ts","./src/app/features/users/components/users-list/users-list.component.html","./src/app/features/users/store/users.selectors.ts","./src/app/features/users/users-routing.module.ts","./src/app/features/users/users.component.ts","./src/app/features/users/users.component.html","./src/app/features/users/users.module.ts"],"names":[],"mappings":"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","file":"features-users-users-module-es2015.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core'\nimport { MatTableDataSource } from '@angular/material/table'\nimport { User } from '../../models/user.model'\nimport { UsersState } from '../../store/users.state'\nimport { select, Store } from '@ngrx/store'\nimport { readUsers } from '../../store/users.actions'\nimport { CollectionParams } from '../../../../shared/models/collection-params.model'\nimport { selectTotalCount, selectUsers } from '../../store/users.selectors'\nimport { selectLoading } from '../../../../shared/store/shared.selectors'\nimport { Observable } from 'rxjs'\nimport { MatSort, Sort } from '@angular/material/sort'\nimport { MatPaginator, PageEvent } from '@angular/material/paginator'\nimport { ActivatedRoute, Params, Router } from '@angular/router'\nimport { MatDialog } from '@angular/material/dialog'\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component'\nimport { DialogDataModel } from 'src/app/shared/models/dialog-data.model'\nimport { NewBookingDialogComponent } from 'src/app/shared/components/new-booking-dialog/new-booking-dialog.component'\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnInit {\n\n  @ViewChild(MatSort) sort: MatSort\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator\n\n  public loading$: Observable<boolean>\n  public users$: Observable<User[]>\n  public totalCount$: Observable<number>\n\n  public dataSourceForTable: MatTableDataSource<User>\n  public displayedColumns: string[] = []\n\n  public currentSort: Sort\n  public currentPageIndex: number\n  public currentPageSize: number\n  public currentFilter = ''\n  private readonly defaultSort: Sort = { active: 'id', direction: 'asc' }\n  private readonly defaultPageIndex: number = 0\n  private readonly defaultPageSize: number = 10\n\n  constructor(\n    private store: Store<UsersState>,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private dialog: MatDialog,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.users$ = this.store.pipe(select(selectUsers))\n    this.loading$ = this.store.pipe(select(selectLoading))\n    this.totalCount$ = this.store.pipe(select(selectTotalCount))\n\n    this.users$.subscribe(users => {\n      this.dataSourceForTable = new MatTableDataSource(users)\n    })\n\n    this.activatedRoute.queryParams.subscribe((paramsFromUrl: CollectionParams) => {\n      if (paramsFromUrl?.sortField && paramsFromUrl?.sortDirection) {\n        this.currentSort = {\n          active: paramsFromUrl.sortField,\n          direction: paramsFromUrl.sortDirection,\n        }\n      } else {\n        this.setCurrentSort(this.defaultSort)\n      }\n\n      if (paramsFromUrl?.pageIndex && paramsFromUrl?.pageSize) {\n        this.currentPageIndex = paramsFromUrl.pageIndex\n        this.currentPageSize = paramsFromUrl.pageSize\n      } else {\n        this.setCurrentPageIndexAndSize(this.defaultPageIndex, this.defaultPageSize)\n      }\n\n      if (paramsFromUrl?.filter) {\n        this.currentFilter = paramsFromUrl.filter\n      }\n\n      if (\n        paramsFromUrl?.sortField && paramsFromUrl?.sortDirection &&\n        paramsFromUrl?.pageIndex && paramsFromUrl?.pageSize\n      ) {\n        this.loadUsers()\n      }\n    })\n\n    this.setDisplayedColumns()\n  }\n\n  public onRefresh(): void {\n    this.loadUsers()\n  }\n\n  public onMatSortChange($event: Sort): void {\n    this.setCurrentSort($event)\n  }\n\n  public onClear(): void {\n    this.onFilterChange('')\n  }\n\n  public onPageChange($event: PageEvent): void {\n    this.setCurrentPageIndexAndSize($event.pageIndex, $event.pageSize)\n  }\n\n  public onFilterChange($event: string): void {\n    this.currentFilter = $event\n    this.updateQueryParamToUrl({ filter: $event === '' ? null : $event })\n  }\n\n  public onEdit(user: User): void {\n\n    let dialogRef = this.dialog.open(NewBookingDialogComponent, {\n      width: '98vw',\n      height: '90vh',\n      data: ({\n        title: 'New Booking',\n        message: 'Custom message here...',\n      } as DialogDataModel),\n    })\n  }\n\n  private loadUsers(): void {\n    this.store.dispatch(readUsers({\n      collectionParams: {\n        filter: this.currentFilter,\n        sortDirection: this.currentSort.direction,\n        sortField: this.currentSort.active,\n        pageIndex: this.currentPageIndex,\n        pageSize: this.currentPageSize,\n      },\n    }))\n  }\n\n  private setDisplayedColumns(): void {\n    this.displayedColumns = ['id', 'firstName', 'lastName', 'actions']\n  }\n\n  private setCurrentSort(sort: Sort): void {\n    this.currentSort = sort\n    this.updateQueryParamToUrl({ sortField: sort.active, sortDirection: sort.direction })\n  }\n\n  private updateQueryParamToUrl(params: Params) {\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: params,\n      queryParamsHandling: 'merge',\n    })\n  }\n\n  private setCurrentPageIndexAndSize(pageIndex: number, pageSize: number): void {\n    this.currentPageIndex = pageIndex\n    this.currentPageSize = pageSize\n    this.updateQueryParamToUrl({ pageIndex, pageSize })\n  }\n}\n","Bookings ({{ (totalCount$ | async) }})\n\n<mat-form-field>\n  <mat-label>Search</mat-label>\n  <input matInput [value]=\"currentFilter\" appInput (delayedInput)=\"onFilterChange($event)\">\n</mat-form-field>\n\n<button mat-icon-button (click)=\"onClear()\" [disabled]=\"!currentFilter\">\n  <mat-icon>clear</mat-icon>\n</button>\n\n<button mat-icon-button (click)=\"onRefresh()\">\n  <mat-icon>refresh</mat-icon>\n</button>\n\n<table mat-table matSort class=\"w-100\" [dataSource]=\"dataSourceForTable\" [matSortActive]=\"currentSort.active\"\n  [matSortDirection]=\"currentSort.direction\" (matSortChange)=\"onMatSortChange($event)\" matSortDisableClear>\n\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.id}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"firstName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Code</th>\n    <td mat-cell *matCellDef=\"let element\"> {{ element.firstName }} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"lastName\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.lastName}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"email\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n    <td mat-cell *matCellDef=\"let element\">{{element.email}} </td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Actions</th>\n    <td mat-cell *matCellDef=\"let element\">\n      <button mat-icon-button (click)=\"onEdit(element)\">\n        <mat-icon>edit</mat-icon>\n      </button>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns, sticky: true\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n<div *ngIf=\"dataSourceForTable.data.length === 0 && !(loading$ | async)\" class=\"row-info\">\n  No users found.\n</div>\n\n<div *ngIf=\"dataSourceForTable.data.length === 0 && (loading$ | async)\" class=\"row-info\">\n  Loading users...\n</div>\n\n<mat-paginator [length]=\"(totalCount$ | async)\" [pageIndex]=\"currentPageIndex\" (page)=\"onPageChange($event)\"\n  [pageSize]=\"currentPageSize\" [pageSizeOptions]=\"[10, 20, 50]\"></mat-paginator>","import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { usersAdapter, UsersState } from './users.state'\n\nconst {selectAll} = usersAdapter.getSelectors()\nconst selectUsersState = createFeatureSelector<UsersState>('users')\n\nexport const selectUsers = createSelector(\n  selectUsersState,\n  selectAll,\n)\n\nexport const selectTotalCount = createSelector(\n  selectUsersState,\n  (state) => state.totalCount,\n)\n","import { NgModule } from '@angular/core'\nimport { Routes, RouterModule } from '@angular/router'\nimport { UsersComponent } from './users.component'\nimport { UsersListComponent } from './components/users-list/users-list.component'\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsersComponent,\n    children: [\n      {\n        path: 'list',\n        component: UsersListComponent,\n      },\n      {\n        path: '',\n        redirectTo: 'list',\n        pathMatch: 'full',\n      },\n    ],\n  },\n]\n\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UsersRoutingModule { }\n","import { Component } from '@angular/core'\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss'],\n})\nexport class UsersComponent {\n}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\n\nimport { UsersRoutingModule } from './users-routing.module'\nimport { UsersComponent } from './users.component'\nimport { UsersListComponent } from './components/users-list/users-list.component'\nimport { SharedModule } from '../../shared/shared.module'\n\n\n@NgModule({\n  declarations: [\n      UsersComponent,\n      UsersListComponent,\n  ],\n    imports: [\n        CommonModule,\n        UsersRoutingModule,\n        SharedModule,\n    ],\n})\nexport class UsersModule {\n}\n"],"sourceRoot":"webpack:///"}