{"version":3,"sources":["webpack:///src/app/features/todos/store/todos.selectors.ts","webpack:///src/app/features/todos/todos-routing.module.ts","webpack:///src/app/features/todos/todos.component.ts","webpack:///src/app/features/todos/todos.component.html","webpack:///src/app/features/todos/todos.module.ts"],"names":["getSelectors","selectAll","selectTodosState","selectTodos","routes","path","component","TodosRoutingModule","forChild","imports","exports","TodosComponent","store","dispatch","todos$","pipe","form","todo","name","newTodoName","resetForm","item","todoId","id","newDoneStatus","updateTodo","changes","done","selector","templateUrl","styleUrls","TodosModule","declarations"],"mappings":"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","file":"features-todos-todos-module-es5.js","sourcesContent":["import { createFeatureSelector, createSelector } from '@ngrx/store'\nimport { todosAdapter, TodosState } from './todos.state'\n\nconst { selectAll } = todosAdapter.getSelectors()\nconst selectTodosState = createFeatureSelector<TodosState>('todos')\n\nexport const selectTodos = createSelector(\n  selectTodosState,\n  selectAll,\n)\n","import { NgModule } from '@angular/core'\nimport { RouterModule, Routes } from '@angular/router'\n\nimport { TodosComponent } from './todos.component'\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TodosComponent,\n  },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TodosRoutingModule {\n}\n","import { Component, OnInit } from '@angular/core'\nimport { select, Store } from '@ngrx/store'\nimport { Observable } from 'rxjs'\nimport { TodosState } from './store/todos.state'\nimport { createTodosItem, deleteTodosItem, readTodos, updateTodosItem } from './store/todos.actions'\nimport { selectTodos } from './store/todos.selectors'\nimport { Todo } from './models/todo'\nimport { NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-todos',\n  templateUrl: './todos.component.html',\n  styleUrls: ['./todos.component.scss'],\n})\nexport class TodosComponent implements OnInit {\n  public todos$: Observable<Todo[]>\n  public newTodoName: string\n\n  constructor(private store: Store<TodosState>) {\n    store.dispatch(readTodos())\n  }\n\n  ngOnInit(): void {\n    this.todos$ = this.store.pipe(select(selectTodos))\n  }\n\n  public onSubmit(form: NgForm): void {\n    this.store.dispatch(createTodosItem({todo: {name: this.newTodoName}}))\n    form.resetForm()\n  }\n\n  public onDelete(item: Todo): void {\n    this.store.dispatch(deleteTodosItem({todoId: item.id}))\n  }\n\n  public onChange(item: Todo, newDoneStatus: boolean): void {\n    this.store.dispatch(updateTodosItem({updateTodo: {id: item.id, changes: {...item, done: newDoneStatus}}}))\n  }\n}\n","<div *ngIf=\"todos$ | async as todos\">\n  <app-page-header>\n    <app-page-header-back [link]=\"'/'\" ariaLabel=\"Back to homepage\"></app-page-header-back>\n    <app-page-header-title [addons]=\"todos.length\">To-do list</app-page-header-title>\n    <button mat-icon-button color=\"primary\" aria-label=\"Reload\" class=\"ml-auto\">\n      <mat-icon>refresh</mat-icon>\n    </button>\n  </app-page-header>\n\n  <div class=\"page-content\">\n    <div class=\"squeeze\">\n      <mat-card class=\"mb-3\">\n        <form (ngSubmit)=\"onSubmit(todoForm)\" #todoForm=\"ngForm\" novalidate>\n          <mat-form-field class=\"w-100\">\n            <mat-label>To-do name</mat-label>\n            <input matInput type=\"text\" [(ngModel)]=\"newTodoName\" #todoName=\"ngModel\" name=\"todoName\" required>\n            <mat-error *ngIf=\"todoName.hasError('required')\">\n              Name is required\n            </mat-error>\n          </mat-form-field>\n\n          <div class=\"text-right\">\n            <button mat-button type=\"reset\">Reset</button>\n            <button mat-flat-button color=\"primary\" type=\"submit\" [disabled]=\"todoForm.invalid\">Submit</button>\n          </div>\n        </form>\n      </mat-card>\n\n      <mat-list>\n        <mat-list-item role=\"listitem\" *ngFor=\"let todo of todos\">\n          <mat-checkbox [checked]=\"todo.done\" (change)=\"onChange(todo, $event.checked)\">{{ todo.name }}</mat-checkbox>\n\n          <button mat-icon-button aria-label=\"Delete to-do item\" color=\"warn\" class=\"ml-auto\" (click)=\"onDelete(todo)\">\n            <mat-icon>delete</mat-icon>\n          </button>\n        </mat-list-item>\n      </mat-list>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core'\nimport { CommonModule } from '@angular/common'\nimport { FormsModule } from '@angular/forms'\nimport { SharedModule } from '../../shared/shared.module'\nimport { TodosRoutingModule } from './todos-routing.module'\n\nimport { TodosComponent } from './todos.component'\n\n\n@NgModule({\n  declarations: [\n    TodosComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    TodosRoutingModule,\n  ],\n})\nexport class TodosModule {\n}\n"]}